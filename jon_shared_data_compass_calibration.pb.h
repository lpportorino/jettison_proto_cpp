// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: jon_shared_data_compass_calibration.proto
// Protobuf C++ Version: 5.29.2

#ifndef jon_5fshared_5fdata_5fcompass_5fcalibration_2eproto_2epb_2eh
#define jon_5fshared_5fdata_5fcompass_5fcalibration_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "jon_shared_data_types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_jon_5fshared_5fdata_5fcompass_5fcalibration_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_jon_5fshared_5fdata_5fcompass_5fcalibration_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_jon_5fshared_5fdata_5fcompass_5fcalibration_2eproto;
namespace ser {
class JonGuiDataCompassCalibration;
struct JonGuiDataCompassCalibrationDefaultTypeInternal;
extern JonGuiDataCompassCalibrationDefaultTypeInternal _JonGuiDataCompassCalibration_default_instance_;
}  // namespace ser
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ser {

// ===================================================================


// -------------------------------------------------------------------

class JonGuiDataCompassCalibration final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ser.JonGuiDataCompassCalibration) */ {
 public:
  inline JonGuiDataCompassCalibration() : JonGuiDataCompassCalibration(nullptr) {}
  ~JonGuiDataCompassCalibration() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JonGuiDataCompassCalibration* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JonGuiDataCompassCalibration));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JonGuiDataCompassCalibration(
      ::google::protobuf::internal::ConstantInitialized);

  inline JonGuiDataCompassCalibration(const JonGuiDataCompassCalibration& from) : JonGuiDataCompassCalibration(nullptr, from) {}
  inline JonGuiDataCompassCalibration(JonGuiDataCompassCalibration&& from) noexcept
      : JonGuiDataCompassCalibration(nullptr, std::move(from)) {}
  inline JonGuiDataCompassCalibration& operator=(const JonGuiDataCompassCalibration& from) {
    CopyFrom(from);
    return *this;
  }
  inline JonGuiDataCompassCalibration& operator=(JonGuiDataCompassCalibration&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JonGuiDataCompassCalibration& default_instance() {
    return *internal_default_instance();
  }
  static inline const JonGuiDataCompassCalibration* internal_default_instance() {
    return reinterpret_cast<const JonGuiDataCompassCalibration*>(
        &_JonGuiDataCompassCalibration_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(JonGuiDataCompassCalibration& a, JonGuiDataCompassCalibration& b) { a.Swap(&b); }
  inline void Swap(JonGuiDataCompassCalibration* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JonGuiDataCompassCalibration* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JonGuiDataCompassCalibration* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JonGuiDataCompassCalibration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JonGuiDataCompassCalibration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JonGuiDataCompassCalibration& from) { JonGuiDataCompassCalibration::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JonGuiDataCompassCalibration* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ser.JonGuiDataCompassCalibration"; }

 protected:
  explicit JonGuiDataCompassCalibration(::google::protobuf::Arena* arena);
  JonGuiDataCompassCalibration(::google::protobuf::Arena* arena, const JonGuiDataCompassCalibration& from);
  JonGuiDataCompassCalibration(::google::protobuf::Arena* arena, JonGuiDataCompassCalibration&& from) noexcept
      : JonGuiDataCompassCalibration(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStageFieldNumber = 1,
    kFinalStageFieldNumber = 2,
    kTargetAzimuthFieldNumber = 3,
    kTargetElevationFieldNumber = 4,
    kTargetBankFieldNumber = 5,
    kStatusFieldNumber = 6,
  };
  // uint32 stage = 1;
  void clear_stage() ;
  ::uint32_t stage() const;
  void set_stage(::uint32_t value);

  private:
  ::uint32_t _internal_stage() const;
  void _internal_set_stage(::uint32_t value);

  public:
  // uint32 final_stage = 2;
  void clear_final_stage() ;
  ::uint32_t final_stage() const;
  void set_final_stage(::uint32_t value);

  private:
  ::uint32_t _internal_final_stage() const;
  void _internal_set_final_stage(::uint32_t value);

  public:
  // double target_azimuth = 3;
  void clear_target_azimuth() ;
  double target_azimuth() const;
  void set_target_azimuth(double value);

  private:
  double _internal_target_azimuth() const;
  void _internal_set_target_azimuth(double value);

  public:
  // double target_elevation = 4;
  void clear_target_elevation() ;
  double target_elevation() const;
  void set_target_elevation(double value);

  private:
  double _internal_target_elevation() const;
  void _internal_set_target_elevation(double value);

  public:
  // double target_bank = 5;
  void clear_target_bank() ;
  double target_bank() const;
  void set_target_bank(double value);

  private:
  double _internal_target_bank() const;
  void _internal_set_target_bank(double value);

  public:
  // .ser.JonGuiDataCompassCalibrateStatus status = 6;
  void clear_status() ;
  ::ser::JonGuiDataCompassCalibrateStatus status() const;
  void set_status(::ser::JonGuiDataCompassCalibrateStatus value);

  private:
  ::ser::JonGuiDataCompassCalibrateStatus _internal_status() const;
  void _internal_set_status(::ser::JonGuiDataCompassCalibrateStatus value);

  public:
  // @@protoc_insertion_point(class_scope:ser.JonGuiDataCompassCalibration)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JonGuiDataCompassCalibration& from_msg);
    ::uint32_t stage_;
    ::uint32_t final_stage_;
    double target_azimuth_;
    double target_elevation_;
    double target_bank_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fdata_5fcompass_5fcalibration_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// JonGuiDataCompassCalibration

// uint32 stage = 1;
inline void JonGuiDataCompassCalibration::clear_stage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_ = 0u;
}
inline ::uint32_t JonGuiDataCompassCalibration::stage() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataCompassCalibration.stage)
  return _internal_stage();
}
inline void JonGuiDataCompassCalibration::set_stage(::uint32_t value) {
  _internal_set_stage(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataCompassCalibration.stage)
}
inline ::uint32_t JonGuiDataCompassCalibration::_internal_stage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stage_;
}
inline void JonGuiDataCompassCalibration::_internal_set_stage(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_ = value;
}

// uint32 final_stage = 2;
inline void JonGuiDataCompassCalibration::clear_final_stage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_stage_ = 0u;
}
inline ::uint32_t JonGuiDataCompassCalibration::final_stage() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataCompassCalibration.final_stage)
  return _internal_final_stage();
}
inline void JonGuiDataCompassCalibration::set_final_stage(::uint32_t value) {
  _internal_set_final_stage(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataCompassCalibration.final_stage)
}
inline ::uint32_t JonGuiDataCompassCalibration::_internal_final_stage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_stage_;
}
inline void JonGuiDataCompassCalibration::_internal_set_final_stage(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_stage_ = value;
}

// double target_azimuth = 3;
inline void JonGuiDataCompassCalibration::clear_target_azimuth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_azimuth_ = 0;
}
inline double JonGuiDataCompassCalibration::target_azimuth() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataCompassCalibration.target_azimuth)
  return _internal_target_azimuth();
}
inline void JonGuiDataCompassCalibration::set_target_azimuth(double value) {
  _internal_set_target_azimuth(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataCompassCalibration.target_azimuth)
}
inline double JonGuiDataCompassCalibration::_internal_target_azimuth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_azimuth_;
}
inline void JonGuiDataCompassCalibration::_internal_set_target_azimuth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_azimuth_ = value;
}

// double target_elevation = 4;
inline void JonGuiDataCompassCalibration::clear_target_elevation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_elevation_ = 0;
}
inline double JonGuiDataCompassCalibration::target_elevation() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataCompassCalibration.target_elevation)
  return _internal_target_elevation();
}
inline void JonGuiDataCompassCalibration::set_target_elevation(double value) {
  _internal_set_target_elevation(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataCompassCalibration.target_elevation)
}
inline double JonGuiDataCompassCalibration::_internal_target_elevation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_elevation_;
}
inline void JonGuiDataCompassCalibration::_internal_set_target_elevation(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_elevation_ = value;
}

// double target_bank = 5;
inline void JonGuiDataCompassCalibration::clear_target_bank() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_bank_ = 0;
}
inline double JonGuiDataCompassCalibration::target_bank() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataCompassCalibration.target_bank)
  return _internal_target_bank();
}
inline void JonGuiDataCompassCalibration::set_target_bank(double value) {
  _internal_set_target_bank(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataCompassCalibration.target_bank)
}
inline double JonGuiDataCompassCalibration::_internal_target_bank() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_bank_;
}
inline void JonGuiDataCompassCalibration::_internal_set_target_bank(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_bank_ = value;
}

// .ser.JonGuiDataCompassCalibrateStatus status = 6;
inline void JonGuiDataCompassCalibration::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::ser::JonGuiDataCompassCalibrateStatus JonGuiDataCompassCalibration::status() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataCompassCalibration.status)
  return _internal_status();
}
inline void JonGuiDataCompassCalibration::set_status(::ser::JonGuiDataCompassCalibrateStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataCompassCalibration.status)
}
inline ::ser::JonGuiDataCompassCalibrateStatus JonGuiDataCompassCalibration::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataCompassCalibrateStatus>(_impl_.status_);
}
inline void JonGuiDataCompassCalibration::_internal_set_status(::ser::JonGuiDataCompassCalibrateStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace ser


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // jon_5fshared_5fdata_5fcompass_5fcalibration_2eproto_2epb_2eh
