// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: jon_shared_cmd_system.proto
// Protobuf C++ Version: 5.29.2

#ifndef jon_5fshared_5fcmd_5fsystem_2eproto_2epb_2eh
#define jon_5fshared_5fcmd_5fsystem_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "jon_shared_data_types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_jon_5fshared_5fcmd_5fsystem_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_jon_5fshared_5fcmd_5fsystem_2eproto;
namespace cmd {
namespace System {
class DisableGeodesicMode;
struct DisableGeodesicModeDefaultTypeInternal;
extern DisableGeodesicModeDefaultTypeInternal _DisableGeodesicMode_default_instance_;
class EnableGeodesicMode;
struct EnableGeodesicModeDefaultTypeInternal;
extern EnableGeodesicModeDefaultTypeInternal _EnableGeodesicMode_default_instance_;
class EnterTransport;
struct EnterTransportDefaultTypeInternal;
extern EnterTransportDefaultTypeInternal _EnterTransport_default_instance_;
class MarkRecImportant;
struct MarkRecImportantDefaultTypeInternal;
extern MarkRecImportantDefaultTypeInternal _MarkRecImportant_default_instance_;
class PowerOff;
struct PowerOffDefaultTypeInternal;
extern PowerOffDefaultTypeInternal _PowerOff_default_instance_;
class Reboot;
struct RebootDefaultTypeInternal;
extern RebootDefaultTypeInternal _Reboot_default_instance_;
class ResetConfigs;
struct ResetConfigsDefaultTypeInternal;
extern ResetConfigsDefaultTypeInternal _ResetConfigs_default_instance_;
class Root;
struct RootDefaultTypeInternal;
extern RootDefaultTypeInternal _Root_default_instance_;
class SaveFactoryDefaults;
struct SaveFactoryDefaultsDefaultTypeInternal;
extern SaveFactoryDefaultsDefaultTypeInternal _SaveFactoryDefaults_default_instance_;
class SetLocalization;
struct SetLocalizationDefaultTypeInternal;
extern SetLocalizationDefaultTypeInternal _SetLocalization_default_instance_;
class StartALl;
struct StartALlDefaultTypeInternal;
extern StartALlDefaultTypeInternal _StartALl_default_instance_;
class StartRec;
struct StartRecDefaultTypeInternal;
extern StartRecDefaultTypeInternal _StartRec_default_instance_;
class StepDay;
struct StepDayDefaultTypeInternal;
extern StepDayDefaultTypeInternal _StepDay_default_instance_;
class StepHour;
struct StepHourDefaultTypeInternal;
extern StepHourDefaultTypeInternal _StepHour_default_instance_;
class StepMinute;
struct StepMinuteDefaultTypeInternal;
extern StepMinuteDefaultTypeInternal _StepMinute_default_instance_;
class StepMonth;
struct StepMonthDefaultTypeInternal;
extern StepMonthDefaultTypeInternal _StepMonth_default_instance_;
class StepSecond;
struct StepSecondDefaultTypeInternal;
extern StepSecondDefaultTypeInternal _StepSecond_default_instance_;
class StepYear;
struct StepYearDefaultTypeInternal;
extern StepYearDefaultTypeInternal _StepYear_default_instance_;
class StopALl;
struct StopALlDefaultTypeInternal;
extern StopALlDefaultTypeInternal _StopALl_default_instance_;
class StopRec;
struct StopRecDefaultTypeInternal;
extern StopRecDefaultTypeInternal _StopRec_default_instance_;
class UnmarkRecImportant;
struct UnmarkRecImportantDefaultTypeInternal;
extern UnmarkRecImportantDefaultTypeInternal _UnmarkRecImportant_default_instance_;
class WipeUserData;
struct WipeUserDataDefaultTypeInternal;
extern WipeUserDataDefaultTypeInternal _WipeUserData_default_instance_;
}  // namespace System
}  // namespace cmd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cmd {
namespace System {

// ===================================================================


// -------------------------------------------------------------------

class WipeUserData final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.WipeUserData) */ {
 public:
  inline WipeUserData() : WipeUserData(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WipeUserData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WipeUserData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WipeUserData(
      ::google::protobuf::internal::ConstantInitialized);

  inline WipeUserData(const WipeUserData& from) : WipeUserData(nullptr, from) {}
  inline WipeUserData(WipeUserData&& from) noexcept
      : WipeUserData(nullptr, std::move(from)) {}
  inline WipeUserData& operator=(const WipeUserData& from) {
    CopyFrom(from);
    return *this;
  }
  inline WipeUserData& operator=(WipeUserData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WipeUserData& default_instance() {
    return *internal_default_instance();
  }
  static inline const WipeUserData* internal_default_instance() {
    return reinterpret_cast<const WipeUserData*>(
        &_WipeUserData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(WipeUserData& a, WipeUserData& b) { a.Swap(&b); }
  inline void Swap(WipeUserData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WipeUserData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WipeUserData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<WipeUserData>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const WipeUserData& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const WipeUserData& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.WipeUserData"; }

 protected:
  explicit WipeUserData(::google::protobuf::Arena* arena);
  WipeUserData(::google::protobuf::Arena* arena, const WipeUserData& from);
  WipeUserData(::google::protobuf::Arena* arena, WipeUserData&& from) noexcept
      : WipeUserData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.WipeUserData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WipeUserData& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class UnmarkRecImportant final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.UnmarkRecImportant) */ {
 public:
  inline UnmarkRecImportant() : UnmarkRecImportant(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UnmarkRecImportant* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UnmarkRecImportant));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UnmarkRecImportant(
      ::google::protobuf::internal::ConstantInitialized);

  inline UnmarkRecImportant(const UnmarkRecImportant& from) : UnmarkRecImportant(nullptr, from) {}
  inline UnmarkRecImportant(UnmarkRecImportant&& from) noexcept
      : UnmarkRecImportant(nullptr, std::move(from)) {}
  inline UnmarkRecImportant& operator=(const UnmarkRecImportant& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnmarkRecImportant& operator=(UnmarkRecImportant&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnmarkRecImportant& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnmarkRecImportant* internal_default_instance() {
    return reinterpret_cast<const UnmarkRecImportant*>(
        &_UnmarkRecImportant_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(UnmarkRecImportant& a, UnmarkRecImportant& b) { a.Swap(&b); }
  inline void Swap(UnmarkRecImportant* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnmarkRecImportant* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnmarkRecImportant* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<UnmarkRecImportant>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const UnmarkRecImportant& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const UnmarkRecImportant& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.UnmarkRecImportant"; }

 protected:
  explicit UnmarkRecImportant(::google::protobuf::Arena* arena);
  UnmarkRecImportant(::google::protobuf::Arena* arena, const UnmarkRecImportant& from);
  UnmarkRecImportant(::google::protobuf::Arena* arena, UnmarkRecImportant&& from) noexcept
      : UnmarkRecImportant(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.UnmarkRecImportant)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UnmarkRecImportant& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class StopRec final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.StopRec) */ {
 public:
  inline StopRec() : StopRec(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StopRec* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StopRec));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopRec(
      ::google::protobuf::internal::ConstantInitialized);

  inline StopRec(const StopRec& from) : StopRec(nullptr, from) {}
  inline StopRec(StopRec&& from) noexcept
      : StopRec(nullptr, std::move(from)) {}
  inline StopRec& operator=(const StopRec& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopRec& operator=(StopRec&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopRec& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopRec* internal_default_instance() {
    return reinterpret_cast<const StopRec*>(
        &_StopRec_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(StopRec& a, StopRec& b) { a.Swap(&b); }
  inline void Swap(StopRec* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopRec* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopRec* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StopRec>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StopRec& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StopRec& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.StopRec"; }

 protected:
  explicit StopRec(::google::protobuf::Arena* arena);
  StopRec(::google::protobuf::Arena* arena, const StopRec& from);
  StopRec(::google::protobuf::Arena* arena, StopRec&& from) noexcept
      : StopRec(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.StopRec)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StopRec& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class StopALl final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.StopALl) */ {
 public:
  inline StopALl() : StopALl(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StopALl* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StopALl));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopALl(
      ::google::protobuf::internal::ConstantInitialized);

  inline StopALl(const StopALl& from) : StopALl(nullptr, from) {}
  inline StopALl(StopALl&& from) noexcept
      : StopALl(nullptr, std::move(from)) {}
  inline StopALl& operator=(const StopALl& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopALl& operator=(StopALl&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopALl& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopALl* internal_default_instance() {
    return reinterpret_cast<const StopALl*>(
        &_StopALl_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(StopALl& a, StopALl& b) { a.Swap(&b); }
  inline void Swap(StopALl* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopALl* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopALl* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StopALl>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StopALl& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StopALl& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.StopALl"; }

 protected:
  explicit StopALl(::google::protobuf::Arena* arena);
  StopALl(::google::protobuf::Arena* arena, const StopALl& from);
  StopALl(::google::protobuf::Arena* arena, StopALl&& from) noexcept
      : StopALl(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.StopALl)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StopALl& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class StepYear final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.System.StepYear) */ {
 public:
  inline StepYear() : StepYear(nullptr) {}
  ~StepYear() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StepYear* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StepYear));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StepYear(
      ::google::protobuf::internal::ConstantInitialized);

  inline StepYear(const StepYear& from) : StepYear(nullptr, from) {}
  inline StepYear(StepYear&& from) noexcept
      : StepYear(nullptr, std::move(from)) {}
  inline StepYear& operator=(const StepYear& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepYear& operator=(StepYear&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StepYear& default_instance() {
    return *internal_default_instance();
  }
  static inline const StepYear* internal_default_instance() {
    return reinterpret_cast<const StepYear*>(
        &_StepYear_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(StepYear& a, StepYear& b) { a.Swap(&b); }
  inline void Swap(StepYear* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StepYear* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StepYear* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StepYear>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StepYear& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StepYear& from) { StepYear::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StepYear* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.StepYear"; }

 protected:
  explicit StepYear(::google::protobuf::Arena* arena);
  StepYear(::google::protobuf::Arena* arena, const StepYear& from);
  StepYear(::google::protobuf::Arena* arena, StepYear&& from) noexcept
      : StepYear(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOffsetFieldNumber = 1,
  };
  // int32 offset = 1;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.System.StepYear)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StepYear& from_msg);
    ::int32_t offset_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class StepSecond final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.System.StepSecond) */ {
 public:
  inline StepSecond() : StepSecond(nullptr) {}
  ~StepSecond() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StepSecond* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StepSecond));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StepSecond(
      ::google::protobuf::internal::ConstantInitialized);

  inline StepSecond(const StepSecond& from) : StepSecond(nullptr, from) {}
  inline StepSecond(StepSecond&& from) noexcept
      : StepSecond(nullptr, std::move(from)) {}
  inline StepSecond& operator=(const StepSecond& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepSecond& operator=(StepSecond&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StepSecond& default_instance() {
    return *internal_default_instance();
  }
  static inline const StepSecond* internal_default_instance() {
    return reinterpret_cast<const StepSecond*>(
        &_StepSecond_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(StepSecond& a, StepSecond& b) { a.Swap(&b); }
  inline void Swap(StepSecond* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StepSecond* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StepSecond* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StepSecond>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StepSecond& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StepSecond& from) { StepSecond::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StepSecond* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.StepSecond"; }

 protected:
  explicit StepSecond(::google::protobuf::Arena* arena);
  StepSecond(::google::protobuf::Arena* arena, const StepSecond& from);
  StepSecond(::google::protobuf::Arena* arena, StepSecond&& from) noexcept
      : StepSecond(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOffsetFieldNumber = 1,
  };
  // int32 offset = 1;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.System.StepSecond)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StepSecond& from_msg);
    ::int32_t offset_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class StepMonth final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.System.StepMonth) */ {
 public:
  inline StepMonth() : StepMonth(nullptr) {}
  ~StepMonth() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StepMonth* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StepMonth));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StepMonth(
      ::google::protobuf::internal::ConstantInitialized);

  inline StepMonth(const StepMonth& from) : StepMonth(nullptr, from) {}
  inline StepMonth(StepMonth&& from) noexcept
      : StepMonth(nullptr, std::move(from)) {}
  inline StepMonth& operator=(const StepMonth& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepMonth& operator=(StepMonth&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StepMonth& default_instance() {
    return *internal_default_instance();
  }
  static inline const StepMonth* internal_default_instance() {
    return reinterpret_cast<const StepMonth*>(
        &_StepMonth_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(StepMonth& a, StepMonth& b) { a.Swap(&b); }
  inline void Swap(StepMonth* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StepMonth* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StepMonth* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StepMonth>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StepMonth& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StepMonth& from) { StepMonth::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StepMonth* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.StepMonth"; }

 protected:
  explicit StepMonth(::google::protobuf::Arena* arena);
  StepMonth(::google::protobuf::Arena* arena, const StepMonth& from);
  StepMonth(::google::protobuf::Arena* arena, StepMonth&& from) noexcept
      : StepMonth(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOffsetFieldNumber = 1,
  };
  // int32 offset = 1;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.System.StepMonth)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StepMonth& from_msg);
    ::int32_t offset_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class StepMinute final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.System.StepMinute) */ {
 public:
  inline StepMinute() : StepMinute(nullptr) {}
  ~StepMinute() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StepMinute* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StepMinute));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StepMinute(
      ::google::protobuf::internal::ConstantInitialized);

  inline StepMinute(const StepMinute& from) : StepMinute(nullptr, from) {}
  inline StepMinute(StepMinute&& from) noexcept
      : StepMinute(nullptr, std::move(from)) {}
  inline StepMinute& operator=(const StepMinute& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepMinute& operator=(StepMinute&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StepMinute& default_instance() {
    return *internal_default_instance();
  }
  static inline const StepMinute* internal_default_instance() {
    return reinterpret_cast<const StepMinute*>(
        &_StepMinute_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(StepMinute& a, StepMinute& b) { a.Swap(&b); }
  inline void Swap(StepMinute* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StepMinute* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StepMinute* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StepMinute>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StepMinute& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StepMinute& from) { StepMinute::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StepMinute* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.StepMinute"; }

 protected:
  explicit StepMinute(::google::protobuf::Arena* arena);
  StepMinute(::google::protobuf::Arena* arena, const StepMinute& from);
  StepMinute(::google::protobuf::Arena* arena, StepMinute&& from) noexcept
      : StepMinute(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOffsetFieldNumber = 1,
  };
  // int32 offset = 1;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.System.StepMinute)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StepMinute& from_msg);
    ::int32_t offset_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class StepHour final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.System.StepHour) */ {
 public:
  inline StepHour() : StepHour(nullptr) {}
  ~StepHour() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StepHour* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StepHour));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StepHour(
      ::google::protobuf::internal::ConstantInitialized);

  inline StepHour(const StepHour& from) : StepHour(nullptr, from) {}
  inline StepHour(StepHour&& from) noexcept
      : StepHour(nullptr, std::move(from)) {}
  inline StepHour& operator=(const StepHour& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepHour& operator=(StepHour&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StepHour& default_instance() {
    return *internal_default_instance();
  }
  static inline const StepHour* internal_default_instance() {
    return reinterpret_cast<const StepHour*>(
        &_StepHour_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(StepHour& a, StepHour& b) { a.Swap(&b); }
  inline void Swap(StepHour* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StepHour* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StepHour* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StepHour>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StepHour& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StepHour& from) { StepHour::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StepHour* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.StepHour"; }

 protected:
  explicit StepHour(::google::protobuf::Arena* arena);
  StepHour(::google::protobuf::Arena* arena, const StepHour& from);
  StepHour(::google::protobuf::Arena* arena, StepHour&& from) noexcept
      : StepHour(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOffsetFieldNumber = 1,
  };
  // int32 offset = 1;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.System.StepHour)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StepHour& from_msg);
    ::int32_t offset_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class StepDay final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.System.StepDay) */ {
 public:
  inline StepDay() : StepDay(nullptr) {}
  ~StepDay() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StepDay* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StepDay));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StepDay(
      ::google::protobuf::internal::ConstantInitialized);

  inline StepDay(const StepDay& from) : StepDay(nullptr, from) {}
  inline StepDay(StepDay&& from) noexcept
      : StepDay(nullptr, std::move(from)) {}
  inline StepDay& operator=(const StepDay& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepDay& operator=(StepDay&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StepDay& default_instance() {
    return *internal_default_instance();
  }
  static inline const StepDay* internal_default_instance() {
    return reinterpret_cast<const StepDay*>(
        &_StepDay_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(StepDay& a, StepDay& b) { a.Swap(&b); }
  inline void Swap(StepDay* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StepDay* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StepDay* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StepDay>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StepDay& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StepDay& from) { StepDay::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StepDay* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.StepDay"; }

 protected:
  explicit StepDay(::google::protobuf::Arena* arena);
  StepDay(::google::protobuf::Arena* arena, const StepDay& from);
  StepDay(::google::protobuf::Arena* arena, StepDay&& from) noexcept
      : StepDay(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOffsetFieldNumber = 1,
  };
  // int32 offset = 1;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.System.StepDay)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StepDay& from_msg);
    ::int32_t offset_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class StartRec final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.StartRec) */ {
 public:
  inline StartRec() : StartRec(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StartRec* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StartRec));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartRec(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartRec(const StartRec& from) : StartRec(nullptr, from) {}
  inline StartRec(StartRec&& from) noexcept
      : StartRec(nullptr, std::move(from)) {}
  inline StartRec& operator=(const StartRec& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartRec& operator=(StartRec&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartRec& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartRec* internal_default_instance() {
    return reinterpret_cast<const StartRec*>(
        &_StartRec_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(StartRec& a, StartRec& b) { a.Swap(&b); }
  inline void Swap(StartRec* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartRec* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartRec* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StartRec>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StartRec& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StartRec& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.StartRec"; }

 protected:
  explicit StartRec(::google::protobuf::Arena* arena);
  StartRec(::google::protobuf::Arena* arena, const StartRec& from);
  StartRec(::google::protobuf::Arena* arena, StartRec&& from) noexcept
      : StartRec(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.StartRec)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartRec& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class StartALl final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.StartALl) */ {
 public:
  inline StartALl() : StartALl(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StartALl* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StartALl));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartALl(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartALl(const StartALl& from) : StartALl(nullptr, from) {}
  inline StartALl(StartALl&& from) noexcept
      : StartALl(nullptr, std::move(from)) {}
  inline StartALl& operator=(const StartALl& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartALl& operator=(StartALl&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartALl& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartALl* internal_default_instance() {
    return reinterpret_cast<const StartALl*>(
        &_StartALl_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(StartALl& a, StartALl& b) { a.Swap(&b); }
  inline void Swap(StartALl* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartALl* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartALl* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StartALl>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StartALl& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StartALl& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.StartALl"; }

 protected:
  explicit StartALl(::google::protobuf::Arena* arena);
  StartALl(::google::protobuf::Arena* arena, const StartALl& from);
  StartALl(::google::protobuf::Arena* arena, StartALl&& from) noexcept
      : StartALl(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.StartALl)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartALl& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class SetLocalization final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.System.SetLocalization) */ {
 public:
  inline SetLocalization() : SetLocalization(nullptr) {}
  ~SetLocalization() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetLocalization* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetLocalization));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetLocalization(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetLocalization(const SetLocalization& from) : SetLocalization(nullptr, from) {}
  inline SetLocalization(SetLocalization&& from) noexcept
      : SetLocalization(nullptr, std::move(from)) {}
  inline SetLocalization& operator=(const SetLocalization& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetLocalization& operator=(SetLocalization&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetLocalization& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetLocalization* internal_default_instance() {
    return reinterpret_cast<const SetLocalization*>(
        &_SetLocalization_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SetLocalization& a, SetLocalization& b) { a.Swap(&b); }
  inline void Swap(SetLocalization* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetLocalization* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetLocalization* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetLocalization>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetLocalization& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetLocalization& from) { SetLocalization::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetLocalization* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.SetLocalization"; }

 protected:
  explicit SetLocalization(::google::protobuf::Arena* arena);
  SetLocalization(::google::protobuf::Arena* arena, const SetLocalization& from);
  SetLocalization(::google::protobuf::Arena* arena, SetLocalization&& from) noexcept
      : SetLocalization(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLocFieldNumber = 1,
  };
  // .ser.JonGuiDataSystemLocalizations loc = 1;
  void clear_loc() ;
  ::ser::JonGuiDataSystemLocalizations loc() const;
  void set_loc(::ser::JonGuiDataSystemLocalizations value);

  private:
  ::ser::JonGuiDataSystemLocalizations _internal_loc() const;
  void _internal_set_loc(::ser::JonGuiDataSystemLocalizations value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.System.SetLocalization)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetLocalization& from_msg);
    int loc_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class SaveFactoryDefaults final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.SaveFactoryDefaults) */ {
 public:
  inline SaveFactoryDefaults() : SaveFactoryDefaults(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SaveFactoryDefaults* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SaveFactoryDefaults));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SaveFactoryDefaults(
      ::google::protobuf::internal::ConstantInitialized);

  inline SaveFactoryDefaults(const SaveFactoryDefaults& from) : SaveFactoryDefaults(nullptr, from) {}
  inline SaveFactoryDefaults(SaveFactoryDefaults&& from) noexcept
      : SaveFactoryDefaults(nullptr, std::move(from)) {}
  inline SaveFactoryDefaults& operator=(const SaveFactoryDefaults& from) {
    CopyFrom(from);
    return *this;
  }
  inline SaveFactoryDefaults& operator=(SaveFactoryDefaults&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SaveFactoryDefaults& default_instance() {
    return *internal_default_instance();
  }
  static inline const SaveFactoryDefaults* internal_default_instance() {
    return reinterpret_cast<const SaveFactoryDefaults*>(
        &_SaveFactoryDefaults_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SaveFactoryDefaults& a, SaveFactoryDefaults& b) { a.Swap(&b); }
  inline void Swap(SaveFactoryDefaults* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SaveFactoryDefaults* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SaveFactoryDefaults* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SaveFactoryDefaults>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SaveFactoryDefaults& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SaveFactoryDefaults& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.SaveFactoryDefaults"; }

 protected:
  explicit SaveFactoryDefaults(::google::protobuf::Arena* arena);
  SaveFactoryDefaults(::google::protobuf::Arena* arena, const SaveFactoryDefaults& from);
  SaveFactoryDefaults(::google::protobuf::Arena* arena, SaveFactoryDefaults&& from) noexcept
      : SaveFactoryDefaults(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.SaveFactoryDefaults)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SaveFactoryDefaults& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class ResetConfigs final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.ResetConfigs) */ {
 public:
  inline ResetConfigs() : ResetConfigs(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ResetConfigs* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ResetConfigs));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResetConfigs(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResetConfigs(const ResetConfigs& from) : ResetConfigs(nullptr, from) {}
  inline ResetConfigs(ResetConfigs&& from) noexcept
      : ResetConfigs(nullptr, std::move(from)) {}
  inline ResetConfigs& operator=(const ResetConfigs& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetConfigs& operator=(ResetConfigs&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResetConfigs& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResetConfigs* internal_default_instance() {
    return reinterpret_cast<const ResetConfigs*>(
        &_ResetConfigs_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ResetConfigs& a, ResetConfigs& b) { a.Swap(&b); }
  inline void Swap(ResetConfigs* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResetConfigs* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResetConfigs* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ResetConfigs>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ResetConfigs& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ResetConfigs& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.ResetConfigs"; }

 protected:
  explicit ResetConfigs(::google::protobuf::Arena* arena);
  ResetConfigs(::google::protobuf::Arena* arena, const ResetConfigs& from);
  ResetConfigs(::google::protobuf::Arena* arena, ResetConfigs&& from) noexcept
      : ResetConfigs(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.ResetConfigs)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResetConfigs& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class Reboot final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.Reboot) */ {
 public:
  inline Reboot() : Reboot(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Reboot* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Reboot));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Reboot(
      ::google::protobuf::internal::ConstantInitialized);

  inline Reboot(const Reboot& from) : Reboot(nullptr, from) {}
  inline Reboot(Reboot&& from) noexcept
      : Reboot(nullptr, std::move(from)) {}
  inline Reboot& operator=(const Reboot& from) {
    CopyFrom(from);
    return *this;
  }
  inline Reboot& operator=(Reboot&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Reboot& default_instance() {
    return *internal_default_instance();
  }
  static inline const Reboot* internal_default_instance() {
    return reinterpret_cast<const Reboot*>(
        &_Reboot_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Reboot& a, Reboot& b) { a.Swap(&b); }
  inline void Swap(Reboot* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Reboot* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Reboot* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Reboot>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Reboot& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Reboot& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.Reboot"; }

 protected:
  explicit Reboot(::google::protobuf::Arena* arena);
  Reboot(::google::protobuf::Arena* arena, const Reboot& from);
  Reboot(::google::protobuf::Arena* arena, Reboot&& from) noexcept
      : Reboot(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.Reboot)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Reboot& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class PowerOff final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.PowerOff) */ {
 public:
  inline PowerOff() : PowerOff(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PowerOff* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PowerOff));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PowerOff(
      ::google::protobuf::internal::ConstantInitialized);

  inline PowerOff(const PowerOff& from) : PowerOff(nullptr, from) {}
  inline PowerOff(PowerOff&& from) noexcept
      : PowerOff(nullptr, std::move(from)) {}
  inline PowerOff& operator=(const PowerOff& from) {
    CopyFrom(from);
    return *this;
  }
  inline PowerOff& operator=(PowerOff&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PowerOff& default_instance() {
    return *internal_default_instance();
  }
  static inline const PowerOff* internal_default_instance() {
    return reinterpret_cast<const PowerOff*>(
        &_PowerOff_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(PowerOff& a, PowerOff& b) { a.Swap(&b); }
  inline void Swap(PowerOff* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PowerOff* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PowerOff* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<PowerOff>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PowerOff& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PowerOff& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.PowerOff"; }

 protected:
  explicit PowerOff(::google::protobuf::Arena* arena);
  PowerOff(::google::protobuf::Arena* arena, const PowerOff& from);
  PowerOff(::google::protobuf::Arena* arena, PowerOff&& from) noexcept
      : PowerOff(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.PowerOff)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PowerOff& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class MarkRecImportant final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.MarkRecImportant) */ {
 public:
  inline MarkRecImportant() : MarkRecImportant(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarkRecImportant* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarkRecImportant));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarkRecImportant(
      ::google::protobuf::internal::ConstantInitialized);

  inline MarkRecImportant(const MarkRecImportant& from) : MarkRecImportant(nullptr, from) {}
  inline MarkRecImportant(MarkRecImportant&& from) noexcept
      : MarkRecImportant(nullptr, std::move(from)) {}
  inline MarkRecImportant& operator=(const MarkRecImportant& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarkRecImportant& operator=(MarkRecImportant&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarkRecImportant& default_instance() {
    return *internal_default_instance();
  }
  static inline const MarkRecImportant* internal_default_instance() {
    return reinterpret_cast<const MarkRecImportant*>(
        &_MarkRecImportant_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(MarkRecImportant& a, MarkRecImportant& b) { a.Swap(&b); }
  inline void Swap(MarkRecImportant* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarkRecImportant* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarkRecImportant* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MarkRecImportant>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MarkRecImportant& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MarkRecImportant& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.MarkRecImportant"; }

 protected:
  explicit MarkRecImportant(::google::protobuf::Arena* arena);
  MarkRecImportant(::google::protobuf::Arena* arena, const MarkRecImportant& from);
  MarkRecImportant(::google::protobuf::Arena* arena, MarkRecImportant&& from) noexcept
      : MarkRecImportant(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.MarkRecImportant)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MarkRecImportant& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class EnterTransport final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.EnterTransport) */ {
 public:
  inline EnterTransport() : EnterTransport(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EnterTransport* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EnterTransport));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnterTransport(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnterTransport(const EnterTransport& from) : EnterTransport(nullptr, from) {}
  inline EnterTransport(EnterTransport&& from) noexcept
      : EnterTransport(nullptr, std::move(from)) {}
  inline EnterTransport& operator=(const EnterTransport& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnterTransport& operator=(EnterTransport&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnterTransport& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnterTransport* internal_default_instance() {
    return reinterpret_cast<const EnterTransport*>(
        &_EnterTransport_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(EnterTransport& a, EnterTransport& b) { a.Swap(&b); }
  inline void Swap(EnterTransport* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnterTransport* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnterTransport* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<EnterTransport>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const EnterTransport& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const EnterTransport& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.EnterTransport"; }

 protected:
  explicit EnterTransport(::google::protobuf::Arena* arena);
  EnterTransport(::google::protobuf::Arena* arena, const EnterTransport& from);
  EnterTransport(::google::protobuf::Arena* arena, EnterTransport&& from) noexcept
      : EnterTransport(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.EnterTransport)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnterTransport& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class EnableGeodesicMode final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.EnableGeodesicMode) */ {
 public:
  inline EnableGeodesicMode() : EnableGeodesicMode(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EnableGeodesicMode* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EnableGeodesicMode));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EnableGeodesicMode(
      ::google::protobuf::internal::ConstantInitialized);

  inline EnableGeodesicMode(const EnableGeodesicMode& from) : EnableGeodesicMode(nullptr, from) {}
  inline EnableGeodesicMode(EnableGeodesicMode&& from) noexcept
      : EnableGeodesicMode(nullptr, std::move(from)) {}
  inline EnableGeodesicMode& operator=(const EnableGeodesicMode& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnableGeodesicMode& operator=(EnableGeodesicMode&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnableGeodesicMode& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnableGeodesicMode* internal_default_instance() {
    return reinterpret_cast<const EnableGeodesicMode*>(
        &_EnableGeodesicMode_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(EnableGeodesicMode& a, EnableGeodesicMode& b) { a.Swap(&b); }
  inline void Swap(EnableGeodesicMode* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnableGeodesicMode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnableGeodesicMode* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<EnableGeodesicMode>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const EnableGeodesicMode& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const EnableGeodesicMode& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.EnableGeodesicMode"; }

 protected:
  explicit EnableGeodesicMode(::google::protobuf::Arena* arena);
  EnableGeodesicMode(::google::protobuf::Arena* arena, const EnableGeodesicMode& from);
  EnableGeodesicMode(::google::protobuf::Arena* arena, EnableGeodesicMode&& from) noexcept
      : EnableGeodesicMode(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.EnableGeodesicMode)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EnableGeodesicMode& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class DisableGeodesicMode final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.System.DisableGeodesicMode) */ {
 public:
  inline DisableGeodesicMode() : DisableGeodesicMode(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DisableGeodesicMode* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DisableGeodesicMode));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DisableGeodesicMode(
      ::google::protobuf::internal::ConstantInitialized);

  inline DisableGeodesicMode(const DisableGeodesicMode& from) : DisableGeodesicMode(nullptr, from) {}
  inline DisableGeodesicMode(DisableGeodesicMode&& from) noexcept
      : DisableGeodesicMode(nullptr, std::move(from)) {}
  inline DisableGeodesicMode& operator=(const DisableGeodesicMode& from) {
    CopyFrom(from);
    return *this;
  }
  inline DisableGeodesicMode& operator=(DisableGeodesicMode&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DisableGeodesicMode& default_instance() {
    return *internal_default_instance();
  }
  static inline const DisableGeodesicMode* internal_default_instance() {
    return reinterpret_cast<const DisableGeodesicMode*>(
        &_DisableGeodesicMode_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(DisableGeodesicMode& a, DisableGeodesicMode& b) { a.Swap(&b); }
  inline void Swap(DisableGeodesicMode* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DisableGeodesicMode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DisableGeodesicMode* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DisableGeodesicMode>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DisableGeodesicMode& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DisableGeodesicMode& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.DisableGeodesicMode"; }

 protected:
  explicit DisableGeodesicMode(::google::protobuf::Arena* arena);
  DisableGeodesicMode(::google::protobuf::Arena* arena, const DisableGeodesicMode& from);
  DisableGeodesicMode(::google::protobuf::Arena* arena, DisableGeodesicMode&& from) noexcept
      : DisableGeodesicMode(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.System.DisableGeodesicMode)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DisableGeodesicMode& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};
// -------------------------------------------------------------------

class Root final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.System.Root) */ {
 public:
  inline Root() : Root(nullptr) {}
  ~Root() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Root* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Root));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Root(
      ::google::protobuf::internal::ConstantInitialized);

  inline Root(const Root& from) : Root(nullptr, from) {}
  inline Root(Root&& from) noexcept
      : Root(nullptr, std::move(from)) {}
  inline Root& operator=(const Root& from) {
    CopyFrom(from);
    return *this;
  }
  inline Root& operator=(Root&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Root& default_instance() {
    return *internal_default_instance();
  }
  enum CmdCase {
    kStartAll = 1,
    kStopAll = 2,
    kReboot = 3,
    kPowerOff = 4,
    kLocalization = 5,
    kResetConfigs = 6,
    kStartRec = 7,
    kStopRec = 8,
    kMarkRecImportant = 9,
    kUnmarkRecImportant = 10,
    kEnterTransport = 11,
    kGeodesicModeEnable = 12,
    kGeodesicModeDisable = 13,
    kSaveFactoryDefaults = 14,
    kWipeUserData = 15,
    kStepYear = 16,
    kStepMonth = 17,
    kStepDay = 18,
    kStepHour = 19,
    kStepMinute = 20,
    kStepSecond = 21,
    CMD_NOT_SET = 0,
  };
  static inline const Root* internal_default_instance() {
    return reinterpret_cast<const Root*>(
        &_Root_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Root& a, Root& b) { a.Swap(&b); }
  inline void Swap(Root* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Root* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Root* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Root>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Root& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Root& from) { Root::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Root* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.System.Root"; }

 protected:
  explicit Root(::google::protobuf::Arena* arena);
  Root(::google::protobuf::Arena* arena, const Root& from);
  Root(::google::protobuf::Arena* arena, Root&& from) noexcept
      : Root(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStartAllFieldNumber = 1,
    kStopAllFieldNumber = 2,
    kRebootFieldNumber = 3,
    kPowerOffFieldNumber = 4,
    kLocalizationFieldNumber = 5,
    kResetConfigsFieldNumber = 6,
    kStartRecFieldNumber = 7,
    kStopRecFieldNumber = 8,
    kMarkRecImportantFieldNumber = 9,
    kUnmarkRecImportantFieldNumber = 10,
    kEnterTransportFieldNumber = 11,
    kGeodesicModeEnableFieldNumber = 12,
    kGeodesicModeDisableFieldNumber = 13,
    kSaveFactoryDefaultsFieldNumber = 14,
    kWipeUserDataFieldNumber = 15,
    kStepYearFieldNumber = 16,
    kStepMonthFieldNumber = 17,
    kStepDayFieldNumber = 18,
    kStepHourFieldNumber = 19,
    kStepMinuteFieldNumber = 20,
    kStepSecondFieldNumber = 21,
  };
  // .cmd.System.StartALl start_all = 1;
  bool has_start_all() const;
  private:
  bool _internal_has_start_all() const;

  public:
  void clear_start_all() ;
  const ::cmd::System::StartALl& start_all() const;
  PROTOBUF_NODISCARD ::cmd::System::StartALl* release_start_all();
  ::cmd::System::StartALl* mutable_start_all();
  void set_allocated_start_all(::cmd::System::StartALl* value);
  void unsafe_arena_set_allocated_start_all(::cmd::System::StartALl* value);
  ::cmd::System::StartALl* unsafe_arena_release_start_all();

  private:
  const ::cmd::System::StartALl& _internal_start_all() const;
  ::cmd::System::StartALl* _internal_mutable_start_all();

  public:
  // .cmd.System.StopALl stop_all = 2;
  bool has_stop_all() const;
  private:
  bool _internal_has_stop_all() const;

  public:
  void clear_stop_all() ;
  const ::cmd::System::StopALl& stop_all() const;
  PROTOBUF_NODISCARD ::cmd::System::StopALl* release_stop_all();
  ::cmd::System::StopALl* mutable_stop_all();
  void set_allocated_stop_all(::cmd::System::StopALl* value);
  void unsafe_arena_set_allocated_stop_all(::cmd::System::StopALl* value);
  ::cmd::System::StopALl* unsafe_arena_release_stop_all();

  private:
  const ::cmd::System::StopALl& _internal_stop_all() const;
  ::cmd::System::StopALl* _internal_mutable_stop_all();

  public:
  // .cmd.System.Reboot reboot = 3;
  bool has_reboot() const;
  private:
  bool _internal_has_reboot() const;

  public:
  void clear_reboot() ;
  const ::cmd::System::Reboot& reboot() const;
  PROTOBUF_NODISCARD ::cmd::System::Reboot* release_reboot();
  ::cmd::System::Reboot* mutable_reboot();
  void set_allocated_reboot(::cmd::System::Reboot* value);
  void unsafe_arena_set_allocated_reboot(::cmd::System::Reboot* value);
  ::cmd::System::Reboot* unsafe_arena_release_reboot();

  private:
  const ::cmd::System::Reboot& _internal_reboot() const;
  ::cmd::System::Reboot* _internal_mutable_reboot();

  public:
  // .cmd.System.PowerOff power_off = 4;
  bool has_power_off() const;
  private:
  bool _internal_has_power_off() const;

  public:
  void clear_power_off() ;
  const ::cmd::System::PowerOff& power_off() const;
  PROTOBUF_NODISCARD ::cmd::System::PowerOff* release_power_off();
  ::cmd::System::PowerOff* mutable_power_off();
  void set_allocated_power_off(::cmd::System::PowerOff* value);
  void unsafe_arena_set_allocated_power_off(::cmd::System::PowerOff* value);
  ::cmd::System::PowerOff* unsafe_arena_release_power_off();

  private:
  const ::cmd::System::PowerOff& _internal_power_off() const;
  ::cmd::System::PowerOff* _internal_mutable_power_off();

  public:
  // .cmd.System.SetLocalization localization = 5;
  bool has_localization() const;
  private:
  bool _internal_has_localization() const;

  public:
  void clear_localization() ;
  const ::cmd::System::SetLocalization& localization() const;
  PROTOBUF_NODISCARD ::cmd::System::SetLocalization* release_localization();
  ::cmd::System::SetLocalization* mutable_localization();
  void set_allocated_localization(::cmd::System::SetLocalization* value);
  void unsafe_arena_set_allocated_localization(::cmd::System::SetLocalization* value);
  ::cmd::System::SetLocalization* unsafe_arena_release_localization();

  private:
  const ::cmd::System::SetLocalization& _internal_localization() const;
  ::cmd::System::SetLocalization* _internal_mutable_localization();

  public:
  // .cmd.System.ResetConfigs reset_configs = 6;
  bool has_reset_configs() const;
  private:
  bool _internal_has_reset_configs() const;

  public:
  void clear_reset_configs() ;
  const ::cmd::System::ResetConfigs& reset_configs() const;
  PROTOBUF_NODISCARD ::cmd::System::ResetConfigs* release_reset_configs();
  ::cmd::System::ResetConfigs* mutable_reset_configs();
  void set_allocated_reset_configs(::cmd::System::ResetConfigs* value);
  void unsafe_arena_set_allocated_reset_configs(::cmd::System::ResetConfigs* value);
  ::cmd::System::ResetConfigs* unsafe_arena_release_reset_configs();

  private:
  const ::cmd::System::ResetConfigs& _internal_reset_configs() const;
  ::cmd::System::ResetConfigs* _internal_mutable_reset_configs();

  public:
  // .cmd.System.StartRec start_rec = 7;
  bool has_start_rec() const;
  private:
  bool _internal_has_start_rec() const;

  public:
  void clear_start_rec() ;
  const ::cmd::System::StartRec& start_rec() const;
  PROTOBUF_NODISCARD ::cmd::System::StartRec* release_start_rec();
  ::cmd::System::StartRec* mutable_start_rec();
  void set_allocated_start_rec(::cmd::System::StartRec* value);
  void unsafe_arena_set_allocated_start_rec(::cmd::System::StartRec* value);
  ::cmd::System::StartRec* unsafe_arena_release_start_rec();

  private:
  const ::cmd::System::StartRec& _internal_start_rec() const;
  ::cmd::System::StartRec* _internal_mutable_start_rec();

  public:
  // .cmd.System.StopRec stop_rec = 8;
  bool has_stop_rec() const;
  private:
  bool _internal_has_stop_rec() const;

  public:
  void clear_stop_rec() ;
  const ::cmd::System::StopRec& stop_rec() const;
  PROTOBUF_NODISCARD ::cmd::System::StopRec* release_stop_rec();
  ::cmd::System::StopRec* mutable_stop_rec();
  void set_allocated_stop_rec(::cmd::System::StopRec* value);
  void unsafe_arena_set_allocated_stop_rec(::cmd::System::StopRec* value);
  ::cmd::System::StopRec* unsafe_arena_release_stop_rec();

  private:
  const ::cmd::System::StopRec& _internal_stop_rec() const;
  ::cmd::System::StopRec* _internal_mutable_stop_rec();

  public:
  // .cmd.System.MarkRecImportant mark_rec_important = 9;
  bool has_mark_rec_important() const;
  private:
  bool _internal_has_mark_rec_important() const;

  public:
  void clear_mark_rec_important() ;
  const ::cmd::System::MarkRecImportant& mark_rec_important() const;
  PROTOBUF_NODISCARD ::cmd::System::MarkRecImportant* release_mark_rec_important();
  ::cmd::System::MarkRecImportant* mutable_mark_rec_important();
  void set_allocated_mark_rec_important(::cmd::System::MarkRecImportant* value);
  void unsafe_arena_set_allocated_mark_rec_important(::cmd::System::MarkRecImportant* value);
  ::cmd::System::MarkRecImportant* unsafe_arena_release_mark_rec_important();

  private:
  const ::cmd::System::MarkRecImportant& _internal_mark_rec_important() const;
  ::cmd::System::MarkRecImportant* _internal_mutable_mark_rec_important();

  public:
  // .cmd.System.UnmarkRecImportant unmark_rec_important = 10;
  bool has_unmark_rec_important() const;
  private:
  bool _internal_has_unmark_rec_important() const;

  public:
  void clear_unmark_rec_important() ;
  const ::cmd::System::UnmarkRecImportant& unmark_rec_important() const;
  PROTOBUF_NODISCARD ::cmd::System::UnmarkRecImportant* release_unmark_rec_important();
  ::cmd::System::UnmarkRecImportant* mutable_unmark_rec_important();
  void set_allocated_unmark_rec_important(::cmd::System::UnmarkRecImportant* value);
  void unsafe_arena_set_allocated_unmark_rec_important(::cmd::System::UnmarkRecImportant* value);
  ::cmd::System::UnmarkRecImportant* unsafe_arena_release_unmark_rec_important();

  private:
  const ::cmd::System::UnmarkRecImportant& _internal_unmark_rec_important() const;
  ::cmd::System::UnmarkRecImportant* _internal_mutable_unmark_rec_important();

  public:
  // .cmd.System.EnterTransport enter_transport = 11;
  bool has_enter_transport() const;
  private:
  bool _internal_has_enter_transport() const;

  public:
  void clear_enter_transport() ;
  const ::cmd::System::EnterTransport& enter_transport() const;
  PROTOBUF_NODISCARD ::cmd::System::EnterTransport* release_enter_transport();
  ::cmd::System::EnterTransport* mutable_enter_transport();
  void set_allocated_enter_transport(::cmd::System::EnterTransport* value);
  void unsafe_arena_set_allocated_enter_transport(::cmd::System::EnterTransport* value);
  ::cmd::System::EnterTransport* unsafe_arena_release_enter_transport();

  private:
  const ::cmd::System::EnterTransport& _internal_enter_transport() const;
  ::cmd::System::EnterTransport* _internal_mutable_enter_transport();

  public:
  // .cmd.System.EnableGeodesicMode geodesic_mode_enable = 12;
  bool has_geodesic_mode_enable() const;
  private:
  bool _internal_has_geodesic_mode_enable() const;

  public:
  void clear_geodesic_mode_enable() ;
  const ::cmd::System::EnableGeodesicMode& geodesic_mode_enable() const;
  PROTOBUF_NODISCARD ::cmd::System::EnableGeodesicMode* release_geodesic_mode_enable();
  ::cmd::System::EnableGeodesicMode* mutable_geodesic_mode_enable();
  void set_allocated_geodesic_mode_enable(::cmd::System::EnableGeodesicMode* value);
  void unsafe_arena_set_allocated_geodesic_mode_enable(::cmd::System::EnableGeodesicMode* value);
  ::cmd::System::EnableGeodesicMode* unsafe_arena_release_geodesic_mode_enable();

  private:
  const ::cmd::System::EnableGeodesicMode& _internal_geodesic_mode_enable() const;
  ::cmd::System::EnableGeodesicMode* _internal_mutable_geodesic_mode_enable();

  public:
  // .cmd.System.DisableGeodesicMode geodesic_mode_disable = 13;
  bool has_geodesic_mode_disable() const;
  private:
  bool _internal_has_geodesic_mode_disable() const;

  public:
  void clear_geodesic_mode_disable() ;
  const ::cmd::System::DisableGeodesicMode& geodesic_mode_disable() const;
  PROTOBUF_NODISCARD ::cmd::System::DisableGeodesicMode* release_geodesic_mode_disable();
  ::cmd::System::DisableGeodesicMode* mutable_geodesic_mode_disable();
  void set_allocated_geodesic_mode_disable(::cmd::System::DisableGeodesicMode* value);
  void unsafe_arena_set_allocated_geodesic_mode_disable(::cmd::System::DisableGeodesicMode* value);
  ::cmd::System::DisableGeodesicMode* unsafe_arena_release_geodesic_mode_disable();

  private:
  const ::cmd::System::DisableGeodesicMode& _internal_geodesic_mode_disable() const;
  ::cmd::System::DisableGeodesicMode* _internal_mutable_geodesic_mode_disable();

  public:
  // .cmd.System.SaveFactoryDefaults save_factory_defaults = 14;
  bool has_save_factory_defaults() const;
  private:
  bool _internal_has_save_factory_defaults() const;

  public:
  void clear_save_factory_defaults() ;
  const ::cmd::System::SaveFactoryDefaults& save_factory_defaults() const;
  PROTOBUF_NODISCARD ::cmd::System::SaveFactoryDefaults* release_save_factory_defaults();
  ::cmd::System::SaveFactoryDefaults* mutable_save_factory_defaults();
  void set_allocated_save_factory_defaults(::cmd::System::SaveFactoryDefaults* value);
  void unsafe_arena_set_allocated_save_factory_defaults(::cmd::System::SaveFactoryDefaults* value);
  ::cmd::System::SaveFactoryDefaults* unsafe_arena_release_save_factory_defaults();

  private:
  const ::cmd::System::SaveFactoryDefaults& _internal_save_factory_defaults() const;
  ::cmd::System::SaveFactoryDefaults* _internal_mutable_save_factory_defaults();

  public:
  // .cmd.System.WipeUserData wipe_user_data = 15;
  bool has_wipe_user_data() const;
  private:
  bool _internal_has_wipe_user_data() const;

  public:
  void clear_wipe_user_data() ;
  const ::cmd::System::WipeUserData& wipe_user_data() const;
  PROTOBUF_NODISCARD ::cmd::System::WipeUserData* release_wipe_user_data();
  ::cmd::System::WipeUserData* mutable_wipe_user_data();
  void set_allocated_wipe_user_data(::cmd::System::WipeUserData* value);
  void unsafe_arena_set_allocated_wipe_user_data(::cmd::System::WipeUserData* value);
  ::cmd::System::WipeUserData* unsafe_arena_release_wipe_user_data();

  private:
  const ::cmd::System::WipeUserData& _internal_wipe_user_data() const;
  ::cmd::System::WipeUserData* _internal_mutable_wipe_user_data();

  public:
  // .cmd.System.StepYear step_year = 16;
  bool has_step_year() const;
  private:
  bool _internal_has_step_year() const;

  public:
  void clear_step_year() ;
  const ::cmd::System::StepYear& step_year() const;
  PROTOBUF_NODISCARD ::cmd::System::StepYear* release_step_year();
  ::cmd::System::StepYear* mutable_step_year();
  void set_allocated_step_year(::cmd::System::StepYear* value);
  void unsafe_arena_set_allocated_step_year(::cmd::System::StepYear* value);
  ::cmd::System::StepYear* unsafe_arena_release_step_year();

  private:
  const ::cmd::System::StepYear& _internal_step_year() const;
  ::cmd::System::StepYear* _internal_mutable_step_year();

  public:
  // .cmd.System.StepMonth step_month = 17;
  bool has_step_month() const;
  private:
  bool _internal_has_step_month() const;

  public:
  void clear_step_month() ;
  const ::cmd::System::StepMonth& step_month() const;
  PROTOBUF_NODISCARD ::cmd::System::StepMonth* release_step_month();
  ::cmd::System::StepMonth* mutable_step_month();
  void set_allocated_step_month(::cmd::System::StepMonth* value);
  void unsafe_arena_set_allocated_step_month(::cmd::System::StepMonth* value);
  ::cmd::System::StepMonth* unsafe_arena_release_step_month();

  private:
  const ::cmd::System::StepMonth& _internal_step_month() const;
  ::cmd::System::StepMonth* _internal_mutable_step_month();

  public:
  // .cmd.System.StepDay step_day = 18;
  bool has_step_day() const;
  private:
  bool _internal_has_step_day() const;

  public:
  void clear_step_day() ;
  const ::cmd::System::StepDay& step_day() const;
  PROTOBUF_NODISCARD ::cmd::System::StepDay* release_step_day();
  ::cmd::System::StepDay* mutable_step_day();
  void set_allocated_step_day(::cmd::System::StepDay* value);
  void unsafe_arena_set_allocated_step_day(::cmd::System::StepDay* value);
  ::cmd::System::StepDay* unsafe_arena_release_step_day();

  private:
  const ::cmd::System::StepDay& _internal_step_day() const;
  ::cmd::System::StepDay* _internal_mutable_step_day();

  public:
  // .cmd.System.StepHour step_hour = 19;
  bool has_step_hour() const;
  private:
  bool _internal_has_step_hour() const;

  public:
  void clear_step_hour() ;
  const ::cmd::System::StepHour& step_hour() const;
  PROTOBUF_NODISCARD ::cmd::System::StepHour* release_step_hour();
  ::cmd::System::StepHour* mutable_step_hour();
  void set_allocated_step_hour(::cmd::System::StepHour* value);
  void unsafe_arena_set_allocated_step_hour(::cmd::System::StepHour* value);
  ::cmd::System::StepHour* unsafe_arena_release_step_hour();

  private:
  const ::cmd::System::StepHour& _internal_step_hour() const;
  ::cmd::System::StepHour* _internal_mutable_step_hour();

  public:
  // .cmd.System.StepMinute step_minute = 20;
  bool has_step_minute() const;
  private:
  bool _internal_has_step_minute() const;

  public:
  void clear_step_minute() ;
  const ::cmd::System::StepMinute& step_minute() const;
  PROTOBUF_NODISCARD ::cmd::System::StepMinute* release_step_minute();
  ::cmd::System::StepMinute* mutable_step_minute();
  void set_allocated_step_minute(::cmd::System::StepMinute* value);
  void unsafe_arena_set_allocated_step_minute(::cmd::System::StepMinute* value);
  ::cmd::System::StepMinute* unsafe_arena_release_step_minute();

  private:
  const ::cmd::System::StepMinute& _internal_step_minute() const;
  ::cmd::System::StepMinute* _internal_mutable_step_minute();

  public:
  // .cmd.System.StepSecond step_second = 21;
  bool has_step_second() const;
  private:
  bool _internal_has_step_second() const;

  public:
  void clear_step_second() ;
  const ::cmd::System::StepSecond& step_second() const;
  PROTOBUF_NODISCARD ::cmd::System::StepSecond* release_step_second();
  ::cmd::System::StepSecond* mutable_step_second();
  void set_allocated_step_second(::cmd::System::StepSecond* value);
  void unsafe_arena_set_allocated_step_second(::cmd::System::StepSecond* value);
  ::cmd::System::StepSecond* unsafe_arena_release_step_second();

  private:
  const ::cmd::System::StepSecond& _internal_step_second() const;
  ::cmd::System::StepSecond* _internal_mutable_step_second();

  public:
  void clear_cmd();
  CmdCase cmd_case() const;
  // @@protoc_insertion_point(class_scope:cmd.System.Root)
 private:
  class _Internal;
  void set_has_start_all();
  void set_has_stop_all();
  void set_has_reboot();
  void set_has_power_off();
  void set_has_localization();
  void set_has_reset_configs();
  void set_has_start_rec();
  void set_has_stop_rec();
  void set_has_mark_rec_important();
  void set_has_unmark_rec_important();
  void set_has_enter_transport();
  void set_has_geodesic_mode_enable();
  void set_has_geodesic_mode_disable();
  void set_has_save_factory_defaults();
  void set_has_wipe_user_data();
  void set_has_step_year();
  void set_has_step_month();
  void set_has_step_day();
  void set_has_step_hour();
  void set_has_step_minute();
  void set_has_step_second();
  inline bool has_cmd() const;
  inline void clear_has_cmd();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 21, 21,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Root& from_msg);
    union CmdUnion {
      constexpr CmdUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::cmd::System::StartALl* start_all_;
      ::cmd::System::StopALl* stop_all_;
      ::cmd::System::Reboot* reboot_;
      ::cmd::System::PowerOff* power_off_;
      ::cmd::System::SetLocalization* localization_;
      ::cmd::System::ResetConfigs* reset_configs_;
      ::cmd::System::StartRec* start_rec_;
      ::cmd::System::StopRec* stop_rec_;
      ::cmd::System::MarkRecImportant* mark_rec_important_;
      ::cmd::System::UnmarkRecImportant* unmark_rec_important_;
      ::cmd::System::EnterTransport* enter_transport_;
      ::cmd::System::EnableGeodesicMode* geodesic_mode_enable_;
      ::cmd::System::DisableGeodesicMode* geodesic_mode_disable_;
      ::cmd::System::SaveFactoryDefaults* save_factory_defaults_;
      ::cmd::System::WipeUserData* wipe_user_data_;
      ::cmd::System::StepYear* step_year_;
      ::cmd::System::StepMonth* step_month_;
      ::cmd::System::StepDay* step_day_;
      ::cmd::System::StepHour* step_hour_;
      ::cmd::System::StepMinute* step_minute_;
      ::cmd::System::StepSecond* step_second_;
    } cmd_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fsystem_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Root

// .cmd.System.StartALl start_all = 1;
inline bool Root::has_start_all() const {
  return cmd_case() == kStartAll;
}
inline bool Root::_internal_has_start_all() const {
  return cmd_case() == kStartAll;
}
inline void Root::set_has_start_all() {
  _impl_._oneof_case_[0] = kStartAll;
}
inline void Root::clear_start_all() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStartAll) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.start_all_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.start_all_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::StartALl* Root::release_start_all() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.start_all)
  if (cmd_case() == kStartAll) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.start_all_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.start_all_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::StartALl& Root::_internal_start_all() const {
  return cmd_case() == kStartAll ? *_impl_.cmd_.start_all_ : reinterpret_cast<::cmd::System::StartALl&>(::cmd::System::_StartALl_default_instance_);
}
inline const ::cmd::System::StartALl& Root::start_all() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.start_all)
  return _internal_start_all();
}
inline ::cmd::System::StartALl* Root::unsafe_arena_release_start_all() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.start_all)
  if (cmd_case() == kStartAll) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.start_all_;
    _impl_.cmd_.start_all_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_start_all(::cmd::System::StartALl* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_start_all();
    _impl_.cmd_.start_all_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.start_all)
}
inline ::cmd::System::StartALl* Root::_internal_mutable_start_all() {
  if (cmd_case() != kStartAll) {
    clear_cmd();
    set_has_start_all();
    _impl_.cmd_.start_all_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::StartALl>(GetArena());
  }
  return _impl_.cmd_.start_all_;
}
inline ::cmd::System::StartALl* Root::mutable_start_all() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::StartALl* _msg = _internal_mutable_start_all();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.start_all)
  return _msg;
}

// .cmd.System.StopALl stop_all = 2;
inline bool Root::has_stop_all() const {
  return cmd_case() == kStopAll;
}
inline bool Root::_internal_has_stop_all() const {
  return cmd_case() == kStopAll;
}
inline void Root::set_has_stop_all() {
  _impl_._oneof_case_[0] = kStopAll;
}
inline void Root::clear_stop_all() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStopAll) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.stop_all_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.stop_all_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::StopALl* Root::release_stop_all() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.stop_all)
  if (cmd_case() == kStopAll) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.stop_all_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.stop_all_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::StopALl& Root::_internal_stop_all() const {
  return cmd_case() == kStopAll ? *_impl_.cmd_.stop_all_ : reinterpret_cast<::cmd::System::StopALl&>(::cmd::System::_StopALl_default_instance_);
}
inline const ::cmd::System::StopALl& Root::stop_all() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.stop_all)
  return _internal_stop_all();
}
inline ::cmd::System::StopALl* Root::unsafe_arena_release_stop_all() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.stop_all)
  if (cmd_case() == kStopAll) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.stop_all_;
    _impl_.cmd_.stop_all_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_stop_all(::cmd::System::StopALl* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_stop_all();
    _impl_.cmd_.stop_all_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.stop_all)
}
inline ::cmd::System::StopALl* Root::_internal_mutable_stop_all() {
  if (cmd_case() != kStopAll) {
    clear_cmd();
    set_has_stop_all();
    _impl_.cmd_.stop_all_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::StopALl>(GetArena());
  }
  return _impl_.cmd_.stop_all_;
}
inline ::cmd::System::StopALl* Root::mutable_stop_all() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::StopALl* _msg = _internal_mutable_stop_all();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.stop_all)
  return _msg;
}

// .cmd.System.Reboot reboot = 3;
inline bool Root::has_reboot() const {
  return cmd_case() == kReboot;
}
inline bool Root::_internal_has_reboot() const {
  return cmd_case() == kReboot;
}
inline void Root::set_has_reboot() {
  _impl_._oneof_case_[0] = kReboot;
}
inline void Root::clear_reboot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kReboot) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.reboot_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.reboot_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::Reboot* Root::release_reboot() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.reboot)
  if (cmd_case() == kReboot) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.reboot_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.reboot_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::Reboot& Root::_internal_reboot() const {
  return cmd_case() == kReboot ? *_impl_.cmd_.reboot_ : reinterpret_cast<::cmd::System::Reboot&>(::cmd::System::_Reboot_default_instance_);
}
inline const ::cmd::System::Reboot& Root::reboot() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.reboot)
  return _internal_reboot();
}
inline ::cmd::System::Reboot* Root::unsafe_arena_release_reboot() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.reboot)
  if (cmd_case() == kReboot) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.reboot_;
    _impl_.cmd_.reboot_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_reboot(::cmd::System::Reboot* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_reboot();
    _impl_.cmd_.reboot_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.reboot)
}
inline ::cmd::System::Reboot* Root::_internal_mutable_reboot() {
  if (cmd_case() != kReboot) {
    clear_cmd();
    set_has_reboot();
    _impl_.cmd_.reboot_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::Reboot>(GetArena());
  }
  return _impl_.cmd_.reboot_;
}
inline ::cmd::System::Reboot* Root::mutable_reboot() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::Reboot* _msg = _internal_mutable_reboot();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.reboot)
  return _msg;
}

// .cmd.System.PowerOff power_off = 4;
inline bool Root::has_power_off() const {
  return cmd_case() == kPowerOff;
}
inline bool Root::_internal_has_power_off() const {
  return cmd_case() == kPowerOff;
}
inline void Root::set_has_power_off() {
  _impl_._oneof_case_[0] = kPowerOff;
}
inline void Root::clear_power_off() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kPowerOff) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.power_off_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.power_off_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::PowerOff* Root::release_power_off() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.power_off)
  if (cmd_case() == kPowerOff) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.power_off_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.power_off_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::PowerOff& Root::_internal_power_off() const {
  return cmd_case() == kPowerOff ? *_impl_.cmd_.power_off_ : reinterpret_cast<::cmd::System::PowerOff&>(::cmd::System::_PowerOff_default_instance_);
}
inline const ::cmd::System::PowerOff& Root::power_off() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.power_off)
  return _internal_power_off();
}
inline ::cmd::System::PowerOff* Root::unsafe_arena_release_power_off() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.power_off)
  if (cmd_case() == kPowerOff) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.power_off_;
    _impl_.cmd_.power_off_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_power_off(::cmd::System::PowerOff* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_power_off();
    _impl_.cmd_.power_off_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.power_off)
}
inline ::cmd::System::PowerOff* Root::_internal_mutable_power_off() {
  if (cmd_case() != kPowerOff) {
    clear_cmd();
    set_has_power_off();
    _impl_.cmd_.power_off_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::PowerOff>(GetArena());
  }
  return _impl_.cmd_.power_off_;
}
inline ::cmd::System::PowerOff* Root::mutable_power_off() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::PowerOff* _msg = _internal_mutable_power_off();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.power_off)
  return _msg;
}

// .cmd.System.SetLocalization localization = 5;
inline bool Root::has_localization() const {
  return cmd_case() == kLocalization;
}
inline bool Root::_internal_has_localization() const {
  return cmd_case() == kLocalization;
}
inline void Root::set_has_localization() {
  _impl_._oneof_case_[0] = kLocalization;
}
inline void Root::clear_localization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kLocalization) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.localization_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.localization_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::SetLocalization* Root::release_localization() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.localization)
  if (cmd_case() == kLocalization) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.localization_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.localization_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::SetLocalization& Root::_internal_localization() const {
  return cmd_case() == kLocalization ? *_impl_.cmd_.localization_ : reinterpret_cast<::cmd::System::SetLocalization&>(::cmd::System::_SetLocalization_default_instance_);
}
inline const ::cmd::System::SetLocalization& Root::localization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.localization)
  return _internal_localization();
}
inline ::cmd::System::SetLocalization* Root::unsafe_arena_release_localization() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.localization)
  if (cmd_case() == kLocalization) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.localization_;
    _impl_.cmd_.localization_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_localization(::cmd::System::SetLocalization* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_localization();
    _impl_.cmd_.localization_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.localization)
}
inline ::cmd::System::SetLocalization* Root::_internal_mutable_localization() {
  if (cmd_case() != kLocalization) {
    clear_cmd();
    set_has_localization();
    _impl_.cmd_.localization_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::SetLocalization>(GetArena());
  }
  return _impl_.cmd_.localization_;
}
inline ::cmd::System::SetLocalization* Root::mutable_localization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::SetLocalization* _msg = _internal_mutable_localization();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.localization)
  return _msg;
}

// .cmd.System.ResetConfigs reset_configs = 6;
inline bool Root::has_reset_configs() const {
  return cmd_case() == kResetConfigs;
}
inline bool Root::_internal_has_reset_configs() const {
  return cmd_case() == kResetConfigs;
}
inline void Root::set_has_reset_configs() {
  _impl_._oneof_case_[0] = kResetConfigs;
}
inline void Root::clear_reset_configs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kResetConfigs) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.reset_configs_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.reset_configs_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::ResetConfigs* Root::release_reset_configs() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.reset_configs)
  if (cmd_case() == kResetConfigs) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.reset_configs_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.reset_configs_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::ResetConfigs& Root::_internal_reset_configs() const {
  return cmd_case() == kResetConfigs ? *_impl_.cmd_.reset_configs_ : reinterpret_cast<::cmd::System::ResetConfigs&>(::cmd::System::_ResetConfigs_default_instance_);
}
inline const ::cmd::System::ResetConfigs& Root::reset_configs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.reset_configs)
  return _internal_reset_configs();
}
inline ::cmd::System::ResetConfigs* Root::unsafe_arena_release_reset_configs() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.reset_configs)
  if (cmd_case() == kResetConfigs) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.reset_configs_;
    _impl_.cmd_.reset_configs_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_reset_configs(::cmd::System::ResetConfigs* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_reset_configs();
    _impl_.cmd_.reset_configs_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.reset_configs)
}
inline ::cmd::System::ResetConfigs* Root::_internal_mutable_reset_configs() {
  if (cmd_case() != kResetConfigs) {
    clear_cmd();
    set_has_reset_configs();
    _impl_.cmd_.reset_configs_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::ResetConfigs>(GetArena());
  }
  return _impl_.cmd_.reset_configs_;
}
inline ::cmd::System::ResetConfigs* Root::mutable_reset_configs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::ResetConfigs* _msg = _internal_mutable_reset_configs();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.reset_configs)
  return _msg;
}

// .cmd.System.StartRec start_rec = 7;
inline bool Root::has_start_rec() const {
  return cmd_case() == kStartRec;
}
inline bool Root::_internal_has_start_rec() const {
  return cmd_case() == kStartRec;
}
inline void Root::set_has_start_rec() {
  _impl_._oneof_case_[0] = kStartRec;
}
inline void Root::clear_start_rec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStartRec) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.start_rec_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.start_rec_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::StartRec* Root::release_start_rec() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.start_rec)
  if (cmd_case() == kStartRec) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.start_rec_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.start_rec_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::StartRec& Root::_internal_start_rec() const {
  return cmd_case() == kStartRec ? *_impl_.cmd_.start_rec_ : reinterpret_cast<::cmd::System::StartRec&>(::cmd::System::_StartRec_default_instance_);
}
inline const ::cmd::System::StartRec& Root::start_rec() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.start_rec)
  return _internal_start_rec();
}
inline ::cmd::System::StartRec* Root::unsafe_arena_release_start_rec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.start_rec)
  if (cmd_case() == kStartRec) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.start_rec_;
    _impl_.cmd_.start_rec_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_start_rec(::cmd::System::StartRec* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_start_rec();
    _impl_.cmd_.start_rec_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.start_rec)
}
inline ::cmd::System::StartRec* Root::_internal_mutable_start_rec() {
  if (cmd_case() != kStartRec) {
    clear_cmd();
    set_has_start_rec();
    _impl_.cmd_.start_rec_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::StartRec>(GetArena());
  }
  return _impl_.cmd_.start_rec_;
}
inline ::cmd::System::StartRec* Root::mutable_start_rec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::StartRec* _msg = _internal_mutable_start_rec();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.start_rec)
  return _msg;
}

// .cmd.System.StopRec stop_rec = 8;
inline bool Root::has_stop_rec() const {
  return cmd_case() == kStopRec;
}
inline bool Root::_internal_has_stop_rec() const {
  return cmd_case() == kStopRec;
}
inline void Root::set_has_stop_rec() {
  _impl_._oneof_case_[0] = kStopRec;
}
inline void Root::clear_stop_rec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStopRec) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.stop_rec_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.stop_rec_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::StopRec* Root::release_stop_rec() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.stop_rec)
  if (cmd_case() == kStopRec) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.stop_rec_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.stop_rec_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::StopRec& Root::_internal_stop_rec() const {
  return cmd_case() == kStopRec ? *_impl_.cmd_.stop_rec_ : reinterpret_cast<::cmd::System::StopRec&>(::cmd::System::_StopRec_default_instance_);
}
inline const ::cmd::System::StopRec& Root::stop_rec() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.stop_rec)
  return _internal_stop_rec();
}
inline ::cmd::System::StopRec* Root::unsafe_arena_release_stop_rec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.stop_rec)
  if (cmd_case() == kStopRec) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.stop_rec_;
    _impl_.cmd_.stop_rec_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_stop_rec(::cmd::System::StopRec* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_stop_rec();
    _impl_.cmd_.stop_rec_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.stop_rec)
}
inline ::cmd::System::StopRec* Root::_internal_mutable_stop_rec() {
  if (cmd_case() != kStopRec) {
    clear_cmd();
    set_has_stop_rec();
    _impl_.cmd_.stop_rec_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::StopRec>(GetArena());
  }
  return _impl_.cmd_.stop_rec_;
}
inline ::cmd::System::StopRec* Root::mutable_stop_rec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::StopRec* _msg = _internal_mutable_stop_rec();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.stop_rec)
  return _msg;
}

// .cmd.System.MarkRecImportant mark_rec_important = 9;
inline bool Root::has_mark_rec_important() const {
  return cmd_case() == kMarkRecImportant;
}
inline bool Root::_internal_has_mark_rec_important() const {
  return cmd_case() == kMarkRecImportant;
}
inline void Root::set_has_mark_rec_important() {
  _impl_._oneof_case_[0] = kMarkRecImportant;
}
inline void Root::clear_mark_rec_important() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kMarkRecImportant) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.mark_rec_important_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.mark_rec_important_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::MarkRecImportant* Root::release_mark_rec_important() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.mark_rec_important)
  if (cmd_case() == kMarkRecImportant) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.mark_rec_important_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.mark_rec_important_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::MarkRecImportant& Root::_internal_mark_rec_important() const {
  return cmd_case() == kMarkRecImportant ? *_impl_.cmd_.mark_rec_important_ : reinterpret_cast<::cmd::System::MarkRecImportant&>(::cmd::System::_MarkRecImportant_default_instance_);
}
inline const ::cmd::System::MarkRecImportant& Root::mark_rec_important() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.mark_rec_important)
  return _internal_mark_rec_important();
}
inline ::cmd::System::MarkRecImportant* Root::unsafe_arena_release_mark_rec_important() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.mark_rec_important)
  if (cmd_case() == kMarkRecImportant) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.mark_rec_important_;
    _impl_.cmd_.mark_rec_important_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_mark_rec_important(::cmd::System::MarkRecImportant* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_mark_rec_important();
    _impl_.cmd_.mark_rec_important_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.mark_rec_important)
}
inline ::cmd::System::MarkRecImportant* Root::_internal_mutable_mark_rec_important() {
  if (cmd_case() != kMarkRecImportant) {
    clear_cmd();
    set_has_mark_rec_important();
    _impl_.cmd_.mark_rec_important_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::MarkRecImportant>(GetArena());
  }
  return _impl_.cmd_.mark_rec_important_;
}
inline ::cmd::System::MarkRecImportant* Root::mutable_mark_rec_important() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::MarkRecImportant* _msg = _internal_mutable_mark_rec_important();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.mark_rec_important)
  return _msg;
}

// .cmd.System.UnmarkRecImportant unmark_rec_important = 10;
inline bool Root::has_unmark_rec_important() const {
  return cmd_case() == kUnmarkRecImportant;
}
inline bool Root::_internal_has_unmark_rec_important() const {
  return cmd_case() == kUnmarkRecImportant;
}
inline void Root::set_has_unmark_rec_important() {
  _impl_._oneof_case_[0] = kUnmarkRecImportant;
}
inline void Root::clear_unmark_rec_important() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kUnmarkRecImportant) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.unmark_rec_important_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.unmark_rec_important_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::UnmarkRecImportant* Root::release_unmark_rec_important() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.unmark_rec_important)
  if (cmd_case() == kUnmarkRecImportant) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.unmark_rec_important_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.unmark_rec_important_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::UnmarkRecImportant& Root::_internal_unmark_rec_important() const {
  return cmd_case() == kUnmarkRecImportant ? *_impl_.cmd_.unmark_rec_important_ : reinterpret_cast<::cmd::System::UnmarkRecImportant&>(::cmd::System::_UnmarkRecImportant_default_instance_);
}
inline const ::cmd::System::UnmarkRecImportant& Root::unmark_rec_important() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.unmark_rec_important)
  return _internal_unmark_rec_important();
}
inline ::cmd::System::UnmarkRecImportant* Root::unsafe_arena_release_unmark_rec_important() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.unmark_rec_important)
  if (cmd_case() == kUnmarkRecImportant) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.unmark_rec_important_;
    _impl_.cmd_.unmark_rec_important_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_unmark_rec_important(::cmd::System::UnmarkRecImportant* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_unmark_rec_important();
    _impl_.cmd_.unmark_rec_important_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.unmark_rec_important)
}
inline ::cmd::System::UnmarkRecImportant* Root::_internal_mutable_unmark_rec_important() {
  if (cmd_case() != kUnmarkRecImportant) {
    clear_cmd();
    set_has_unmark_rec_important();
    _impl_.cmd_.unmark_rec_important_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::UnmarkRecImportant>(GetArena());
  }
  return _impl_.cmd_.unmark_rec_important_;
}
inline ::cmd::System::UnmarkRecImportant* Root::mutable_unmark_rec_important() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::UnmarkRecImportant* _msg = _internal_mutable_unmark_rec_important();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.unmark_rec_important)
  return _msg;
}

// .cmd.System.EnterTransport enter_transport = 11;
inline bool Root::has_enter_transport() const {
  return cmd_case() == kEnterTransport;
}
inline bool Root::_internal_has_enter_transport() const {
  return cmd_case() == kEnterTransport;
}
inline void Root::set_has_enter_transport() {
  _impl_._oneof_case_[0] = kEnterTransport;
}
inline void Root::clear_enter_transport() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kEnterTransport) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.enter_transport_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.enter_transport_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::EnterTransport* Root::release_enter_transport() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.enter_transport)
  if (cmd_case() == kEnterTransport) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.enter_transport_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.enter_transport_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::EnterTransport& Root::_internal_enter_transport() const {
  return cmd_case() == kEnterTransport ? *_impl_.cmd_.enter_transport_ : reinterpret_cast<::cmd::System::EnterTransport&>(::cmd::System::_EnterTransport_default_instance_);
}
inline const ::cmd::System::EnterTransport& Root::enter_transport() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.enter_transport)
  return _internal_enter_transport();
}
inline ::cmd::System::EnterTransport* Root::unsafe_arena_release_enter_transport() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.enter_transport)
  if (cmd_case() == kEnterTransport) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.enter_transport_;
    _impl_.cmd_.enter_transport_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_enter_transport(::cmd::System::EnterTransport* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_enter_transport();
    _impl_.cmd_.enter_transport_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.enter_transport)
}
inline ::cmd::System::EnterTransport* Root::_internal_mutable_enter_transport() {
  if (cmd_case() != kEnterTransport) {
    clear_cmd();
    set_has_enter_transport();
    _impl_.cmd_.enter_transport_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::EnterTransport>(GetArena());
  }
  return _impl_.cmd_.enter_transport_;
}
inline ::cmd::System::EnterTransport* Root::mutable_enter_transport() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::EnterTransport* _msg = _internal_mutable_enter_transport();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.enter_transport)
  return _msg;
}

// .cmd.System.EnableGeodesicMode geodesic_mode_enable = 12;
inline bool Root::has_geodesic_mode_enable() const {
  return cmd_case() == kGeodesicModeEnable;
}
inline bool Root::_internal_has_geodesic_mode_enable() const {
  return cmd_case() == kGeodesicModeEnable;
}
inline void Root::set_has_geodesic_mode_enable() {
  _impl_._oneof_case_[0] = kGeodesicModeEnable;
}
inline void Root::clear_geodesic_mode_enable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kGeodesicModeEnable) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.geodesic_mode_enable_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.geodesic_mode_enable_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::EnableGeodesicMode* Root::release_geodesic_mode_enable() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.geodesic_mode_enable)
  if (cmd_case() == kGeodesicModeEnable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.geodesic_mode_enable_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.geodesic_mode_enable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::EnableGeodesicMode& Root::_internal_geodesic_mode_enable() const {
  return cmd_case() == kGeodesicModeEnable ? *_impl_.cmd_.geodesic_mode_enable_ : reinterpret_cast<::cmd::System::EnableGeodesicMode&>(::cmd::System::_EnableGeodesicMode_default_instance_);
}
inline const ::cmd::System::EnableGeodesicMode& Root::geodesic_mode_enable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.geodesic_mode_enable)
  return _internal_geodesic_mode_enable();
}
inline ::cmd::System::EnableGeodesicMode* Root::unsafe_arena_release_geodesic_mode_enable() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.geodesic_mode_enable)
  if (cmd_case() == kGeodesicModeEnable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.geodesic_mode_enable_;
    _impl_.cmd_.geodesic_mode_enable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_geodesic_mode_enable(::cmd::System::EnableGeodesicMode* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_geodesic_mode_enable();
    _impl_.cmd_.geodesic_mode_enable_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.geodesic_mode_enable)
}
inline ::cmd::System::EnableGeodesicMode* Root::_internal_mutable_geodesic_mode_enable() {
  if (cmd_case() != kGeodesicModeEnable) {
    clear_cmd();
    set_has_geodesic_mode_enable();
    _impl_.cmd_.geodesic_mode_enable_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::EnableGeodesicMode>(GetArena());
  }
  return _impl_.cmd_.geodesic_mode_enable_;
}
inline ::cmd::System::EnableGeodesicMode* Root::mutable_geodesic_mode_enable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::EnableGeodesicMode* _msg = _internal_mutable_geodesic_mode_enable();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.geodesic_mode_enable)
  return _msg;
}

// .cmd.System.DisableGeodesicMode geodesic_mode_disable = 13;
inline bool Root::has_geodesic_mode_disable() const {
  return cmd_case() == kGeodesicModeDisable;
}
inline bool Root::_internal_has_geodesic_mode_disable() const {
  return cmd_case() == kGeodesicModeDisable;
}
inline void Root::set_has_geodesic_mode_disable() {
  _impl_._oneof_case_[0] = kGeodesicModeDisable;
}
inline void Root::clear_geodesic_mode_disable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kGeodesicModeDisable) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.geodesic_mode_disable_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.geodesic_mode_disable_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::DisableGeodesicMode* Root::release_geodesic_mode_disable() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.geodesic_mode_disable)
  if (cmd_case() == kGeodesicModeDisable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.geodesic_mode_disable_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.geodesic_mode_disable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::DisableGeodesicMode& Root::_internal_geodesic_mode_disable() const {
  return cmd_case() == kGeodesicModeDisable ? *_impl_.cmd_.geodesic_mode_disable_ : reinterpret_cast<::cmd::System::DisableGeodesicMode&>(::cmd::System::_DisableGeodesicMode_default_instance_);
}
inline const ::cmd::System::DisableGeodesicMode& Root::geodesic_mode_disable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.geodesic_mode_disable)
  return _internal_geodesic_mode_disable();
}
inline ::cmd::System::DisableGeodesicMode* Root::unsafe_arena_release_geodesic_mode_disable() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.geodesic_mode_disable)
  if (cmd_case() == kGeodesicModeDisable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.geodesic_mode_disable_;
    _impl_.cmd_.geodesic_mode_disable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_geodesic_mode_disable(::cmd::System::DisableGeodesicMode* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_geodesic_mode_disable();
    _impl_.cmd_.geodesic_mode_disable_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.geodesic_mode_disable)
}
inline ::cmd::System::DisableGeodesicMode* Root::_internal_mutable_geodesic_mode_disable() {
  if (cmd_case() != kGeodesicModeDisable) {
    clear_cmd();
    set_has_geodesic_mode_disable();
    _impl_.cmd_.geodesic_mode_disable_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::DisableGeodesicMode>(GetArena());
  }
  return _impl_.cmd_.geodesic_mode_disable_;
}
inline ::cmd::System::DisableGeodesicMode* Root::mutable_geodesic_mode_disable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::DisableGeodesicMode* _msg = _internal_mutable_geodesic_mode_disable();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.geodesic_mode_disable)
  return _msg;
}

// .cmd.System.SaveFactoryDefaults save_factory_defaults = 14;
inline bool Root::has_save_factory_defaults() const {
  return cmd_case() == kSaveFactoryDefaults;
}
inline bool Root::_internal_has_save_factory_defaults() const {
  return cmd_case() == kSaveFactoryDefaults;
}
inline void Root::set_has_save_factory_defaults() {
  _impl_._oneof_case_[0] = kSaveFactoryDefaults;
}
inline void Root::clear_save_factory_defaults() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kSaveFactoryDefaults) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.save_factory_defaults_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.save_factory_defaults_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::SaveFactoryDefaults* Root::release_save_factory_defaults() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.save_factory_defaults)
  if (cmd_case() == kSaveFactoryDefaults) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.save_factory_defaults_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.save_factory_defaults_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::SaveFactoryDefaults& Root::_internal_save_factory_defaults() const {
  return cmd_case() == kSaveFactoryDefaults ? *_impl_.cmd_.save_factory_defaults_ : reinterpret_cast<::cmd::System::SaveFactoryDefaults&>(::cmd::System::_SaveFactoryDefaults_default_instance_);
}
inline const ::cmd::System::SaveFactoryDefaults& Root::save_factory_defaults() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.save_factory_defaults)
  return _internal_save_factory_defaults();
}
inline ::cmd::System::SaveFactoryDefaults* Root::unsafe_arena_release_save_factory_defaults() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.save_factory_defaults)
  if (cmd_case() == kSaveFactoryDefaults) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.save_factory_defaults_;
    _impl_.cmd_.save_factory_defaults_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_save_factory_defaults(::cmd::System::SaveFactoryDefaults* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_save_factory_defaults();
    _impl_.cmd_.save_factory_defaults_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.save_factory_defaults)
}
inline ::cmd::System::SaveFactoryDefaults* Root::_internal_mutable_save_factory_defaults() {
  if (cmd_case() != kSaveFactoryDefaults) {
    clear_cmd();
    set_has_save_factory_defaults();
    _impl_.cmd_.save_factory_defaults_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::SaveFactoryDefaults>(GetArena());
  }
  return _impl_.cmd_.save_factory_defaults_;
}
inline ::cmd::System::SaveFactoryDefaults* Root::mutable_save_factory_defaults() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::SaveFactoryDefaults* _msg = _internal_mutable_save_factory_defaults();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.save_factory_defaults)
  return _msg;
}

// .cmd.System.WipeUserData wipe_user_data = 15;
inline bool Root::has_wipe_user_data() const {
  return cmd_case() == kWipeUserData;
}
inline bool Root::_internal_has_wipe_user_data() const {
  return cmd_case() == kWipeUserData;
}
inline void Root::set_has_wipe_user_data() {
  _impl_._oneof_case_[0] = kWipeUserData;
}
inline void Root::clear_wipe_user_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kWipeUserData) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.wipe_user_data_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.wipe_user_data_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::WipeUserData* Root::release_wipe_user_data() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.wipe_user_data)
  if (cmd_case() == kWipeUserData) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.wipe_user_data_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.wipe_user_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::WipeUserData& Root::_internal_wipe_user_data() const {
  return cmd_case() == kWipeUserData ? *_impl_.cmd_.wipe_user_data_ : reinterpret_cast<::cmd::System::WipeUserData&>(::cmd::System::_WipeUserData_default_instance_);
}
inline const ::cmd::System::WipeUserData& Root::wipe_user_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.wipe_user_data)
  return _internal_wipe_user_data();
}
inline ::cmd::System::WipeUserData* Root::unsafe_arena_release_wipe_user_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.wipe_user_data)
  if (cmd_case() == kWipeUserData) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.wipe_user_data_;
    _impl_.cmd_.wipe_user_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_wipe_user_data(::cmd::System::WipeUserData* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_wipe_user_data();
    _impl_.cmd_.wipe_user_data_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.wipe_user_data)
}
inline ::cmd::System::WipeUserData* Root::_internal_mutable_wipe_user_data() {
  if (cmd_case() != kWipeUserData) {
    clear_cmd();
    set_has_wipe_user_data();
    _impl_.cmd_.wipe_user_data_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::WipeUserData>(GetArena());
  }
  return _impl_.cmd_.wipe_user_data_;
}
inline ::cmd::System::WipeUserData* Root::mutable_wipe_user_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::WipeUserData* _msg = _internal_mutable_wipe_user_data();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.wipe_user_data)
  return _msg;
}

// .cmd.System.StepYear step_year = 16;
inline bool Root::has_step_year() const {
  return cmd_case() == kStepYear;
}
inline bool Root::_internal_has_step_year() const {
  return cmd_case() == kStepYear;
}
inline void Root::set_has_step_year() {
  _impl_._oneof_case_[0] = kStepYear;
}
inline void Root::clear_step_year() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStepYear) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.step_year_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.step_year_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::StepYear* Root::release_step_year() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.step_year)
  if (cmd_case() == kStepYear) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.step_year_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.step_year_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::StepYear& Root::_internal_step_year() const {
  return cmd_case() == kStepYear ? *_impl_.cmd_.step_year_ : reinterpret_cast<::cmd::System::StepYear&>(::cmd::System::_StepYear_default_instance_);
}
inline const ::cmd::System::StepYear& Root::step_year() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.step_year)
  return _internal_step_year();
}
inline ::cmd::System::StepYear* Root::unsafe_arena_release_step_year() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.step_year)
  if (cmd_case() == kStepYear) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.step_year_;
    _impl_.cmd_.step_year_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_step_year(::cmd::System::StepYear* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_step_year();
    _impl_.cmd_.step_year_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.step_year)
}
inline ::cmd::System::StepYear* Root::_internal_mutable_step_year() {
  if (cmd_case() != kStepYear) {
    clear_cmd();
    set_has_step_year();
    _impl_.cmd_.step_year_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::StepYear>(GetArena());
  }
  return _impl_.cmd_.step_year_;
}
inline ::cmd::System::StepYear* Root::mutable_step_year() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::StepYear* _msg = _internal_mutable_step_year();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.step_year)
  return _msg;
}

// .cmd.System.StepMonth step_month = 17;
inline bool Root::has_step_month() const {
  return cmd_case() == kStepMonth;
}
inline bool Root::_internal_has_step_month() const {
  return cmd_case() == kStepMonth;
}
inline void Root::set_has_step_month() {
  _impl_._oneof_case_[0] = kStepMonth;
}
inline void Root::clear_step_month() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStepMonth) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.step_month_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.step_month_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::StepMonth* Root::release_step_month() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.step_month)
  if (cmd_case() == kStepMonth) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.step_month_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.step_month_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::StepMonth& Root::_internal_step_month() const {
  return cmd_case() == kStepMonth ? *_impl_.cmd_.step_month_ : reinterpret_cast<::cmd::System::StepMonth&>(::cmd::System::_StepMonth_default_instance_);
}
inline const ::cmd::System::StepMonth& Root::step_month() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.step_month)
  return _internal_step_month();
}
inline ::cmd::System::StepMonth* Root::unsafe_arena_release_step_month() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.step_month)
  if (cmd_case() == kStepMonth) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.step_month_;
    _impl_.cmd_.step_month_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_step_month(::cmd::System::StepMonth* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_step_month();
    _impl_.cmd_.step_month_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.step_month)
}
inline ::cmd::System::StepMonth* Root::_internal_mutable_step_month() {
  if (cmd_case() != kStepMonth) {
    clear_cmd();
    set_has_step_month();
    _impl_.cmd_.step_month_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::StepMonth>(GetArena());
  }
  return _impl_.cmd_.step_month_;
}
inline ::cmd::System::StepMonth* Root::mutable_step_month() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::StepMonth* _msg = _internal_mutable_step_month();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.step_month)
  return _msg;
}

// .cmd.System.StepDay step_day = 18;
inline bool Root::has_step_day() const {
  return cmd_case() == kStepDay;
}
inline bool Root::_internal_has_step_day() const {
  return cmd_case() == kStepDay;
}
inline void Root::set_has_step_day() {
  _impl_._oneof_case_[0] = kStepDay;
}
inline void Root::clear_step_day() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStepDay) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.step_day_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.step_day_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::StepDay* Root::release_step_day() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.step_day)
  if (cmd_case() == kStepDay) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.step_day_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.step_day_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::StepDay& Root::_internal_step_day() const {
  return cmd_case() == kStepDay ? *_impl_.cmd_.step_day_ : reinterpret_cast<::cmd::System::StepDay&>(::cmd::System::_StepDay_default_instance_);
}
inline const ::cmd::System::StepDay& Root::step_day() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.step_day)
  return _internal_step_day();
}
inline ::cmd::System::StepDay* Root::unsafe_arena_release_step_day() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.step_day)
  if (cmd_case() == kStepDay) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.step_day_;
    _impl_.cmd_.step_day_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_step_day(::cmd::System::StepDay* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_step_day();
    _impl_.cmd_.step_day_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.step_day)
}
inline ::cmd::System::StepDay* Root::_internal_mutable_step_day() {
  if (cmd_case() != kStepDay) {
    clear_cmd();
    set_has_step_day();
    _impl_.cmd_.step_day_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::StepDay>(GetArena());
  }
  return _impl_.cmd_.step_day_;
}
inline ::cmd::System::StepDay* Root::mutable_step_day() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::StepDay* _msg = _internal_mutable_step_day();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.step_day)
  return _msg;
}

// .cmd.System.StepHour step_hour = 19;
inline bool Root::has_step_hour() const {
  return cmd_case() == kStepHour;
}
inline bool Root::_internal_has_step_hour() const {
  return cmd_case() == kStepHour;
}
inline void Root::set_has_step_hour() {
  _impl_._oneof_case_[0] = kStepHour;
}
inline void Root::clear_step_hour() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStepHour) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.step_hour_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.step_hour_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::StepHour* Root::release_step_hour() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.step_hour)
  if (cmd_case() == kStepHour) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.step_hour_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.step_hour_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::StepHour& Root::_internal_step_hour() const {
  return cmd_case() == kStepHour ? *_impl_.cmd_.step_hour_ : reinterpret_cast<::cmd::System::StepHour&>(::cmd::System::_StepHour_default_instance_);
}
inline const ::cmd::System::StepHour& Root::step_hour() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.step_hour)
  return _internal_step_hour();
}
inline ::cmd::System::StepHour* Root::unsafe_arena_release_step_hour() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.step_hour)
  if (cmd_case() == kStepHour) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.step_hour_;
    _impl_.cmd_.step_hour_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_step_hour(::cmd::System::StepHour* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_step_hour();
    _impl_.cmd_.step_hour_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.step_hour)
}
inline ::cmd::System::StepHour* Root::_internal_mutable_step_hour() {
  if (cmd_case() != kStepHour) {
    clear_cmd();
    set_has_step_hour();
    _impl_.cmd_.step_hour_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::StepHour>(GetArena());
  }
  return _impl_.cmd_.step_hour_;
}
inline ::cmd::System::StepHour* Root::mutable_step_hour() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::StepHour* _msg = _internal_mutable_step_hour();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.step_hour)
  return _msg;
}

// .cmd.System.StepMinute step_minute = 20;
inline bool Root::has_step_minute() const {
  return cmd_case() == kStepMinute;
}
inline bool Root::_internal_has_step_minute() const {
  return cmd_case() == kStepMinute;
}
inline void Root::set_has_step_minute() {
  _impl_._oneof_case_[0] = kStepMinute;
}
inline void Root::clear_step_minute() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStepMinute) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.step_minute_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.step_minute_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::StepMinute* Root::release_step_minute() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.step_minute)
  if (cmd_case() == kStepMinute) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.step_minute_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.step_minute_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::StepMinute& Root::_internal_step_minute() const {
  return cmd_case() == kStepMinute ? *_impl_.cmd_.step_minute_ : reinterpret_cast<::cmd::System::StepMinute&>(::cmd::System::_StepMinute_default_instance_);
}
inline const ::cmd::System::StepMinute& Root::step_minute() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.step_minute)
  return _internal_step_minute();
}
inline ::cmd::System::StepMinute* Root::unsafe_arena_release_step_minute() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.step_minute)
  if (cmd_case() == kStepMinute) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.step_minute_;
    _impl_.cmd_.step_minute_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_step_minute(::cmd::System::StepMinute* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_step_minute();
    _impl_.cmd_.step_minute_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.step_minute)
}
inline ::cmd::System::StepMinute* Root::_internal_mutable_step_minute() {
  if (cmd_case() != kStepMinute) {
    clear_cmd();
    set_has_step_minute();
    _impl_.cmd_.step_minute_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::StepMinute>(GetArena());
  }
  return _impl_.cmd_.step_minute_;
}
inline ::cmd::System::StepMinute* Root::mutable_step_minute() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::StepMinute* _msg = _internal_mutable_step_minute();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.step_minute)
  return _msg;
}

// .cmd.System.StepSecond step_second = 21;
inline bool Root::has_step_second() const {
  return cmd_case() == kStepSecond;
}
inline bool Root::_internal_has_step_second() const {
  return cmd_case() == kStepSecond;
}
inline void Root::set_has_step_second() {
  _impl_._oneof_case_[0] = kStepSecond;
}
inline void Root::clear_step_second() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStepSecond) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.step_second_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.step_second_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::System::StepSecond* Root::release_step_second() {
  // @@protoc_insertion_point(field_release:cmd.System.Root.step_second)
  if (cmd_case() == kStepSecond) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.step_second_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.step_second_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::System::StepSecond& Root::_internal_step_second() const {
  return cmd_case() == kStepSecond ? *_impl_.cmd_.step_second_ : reinterpret_cast<::cmd::System::StepSecond&>(::cmd::System::_StepSecond_default_instance_);
}
inline const ::cmd::System::StepSecond& Root::step_second() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.System.Root.step_second)
  return _internal_step_second();
}
inline ::cmd::System::StepSecond* Root::unsafe_arena_release_step_second() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.System.Root.step_second)
  if (cmd_case() == kStepSecond) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.step_second_;
    _impl_.cmd_.step_second_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_step_second(::cmd::System::StepSecond* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_step_second();
    _impl_.cmd_.step_second_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.System.Root.step_second)
}
inline ::cmd::System::StepSecond* Root::_internal_mutable_step_second() {
  if (cmd_case() != kStepSecond) {
    clear_cmd();
    set_has_step_second();
    _impl_.cmd_.step_second_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::System::StepSecond>(GetArena());
  }
  return _impl_.cmd_.step_second_;
}
inline ::cmd::System::StepSecond* Root::mutable_step_second() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::System::StepSecond* _msg = _internal_mutable_step_second();
  // @@protoc_insertion_point(field_mutable:cmd.System.Root.step_second)
  return _msg;
}

inline bool Root::has_cmd() const {
  return cmd_case() != CMD_NOT_SET;
}
inline void Root::clear_has_cmd() {
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}
inline Root::CmdCase Root::cmd_case() const {
  return Root::CmdCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// StartALl

// -------------------------------------------------------------------

// StopALl

// -------------------------------------------------------------------

// Reboot

// -------------------------------------------------------------------

// PowerOff

// -------------------------------------------------------------------

// ResetConfigs

// -------------------------------------------------------------------

// SaveFactoryDefaults

// -------------------------------------------------------------------

// WipeUserData

// -------------------------------------------------------------------

// StartRec

// -------------------------------------------------------------------

// StopRec

// -------------------------------------------------------------------

// MarkRecImportant

// -------------------------------------------------------------------

// UnmarkRecImportant

// -------------------------------------------------------------------

// EnterTransport

// -------------------------------------------------------------------

// EnableGeodesicMode

// -------------------------------------------------------------------

// DisableGeodesicMode

// -------------------------------------------------------------------

// SetLocalization

// .ser.JonGuiDataSystemLocalizations loc = 1;
inline void SetLocalization::clear_loc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.loc_ = 0;
}
inline ::ser::JonGuiDataSystemLocalizations SetLocalization::loc() const {
  // @@protoc_insertion_point(field_get:cmd.System.SetLocalization.loc)
  return _internal_loc();
}
inline void SetLocalization::set_loc(::ser::JonGuiDataSystemLocalizations value) {
  _internal_set_loc(value);
  // @@protoc_insertion_point(field_set:cmd.System.SetLocalization.loc)
}
inline ::ser::JonGuiDataSystemLocalizations SetLocalization::_internal_loc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataSystemLocalizations>(_impl_.loc_);
}
inline void SetLocalization::_internal_set_loc(::ser::JonGuiDataSystemLocalizations value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.loc_ = value;
}

// -------------------------------------------------------------------

// StepYear

// int32 offset = 1;
inline void StepYear::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0;
}
inline ::int32_t StepYear::offset() const {
  // @@protoc_insertion_point(field_get:cmd.System.StepYear.offset)
  return _internal_offset();
}
inline void StepYear::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:cmd.System.StepYear.offset)
}
inline ::int32_t StepYear::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void StepYear::_internal_set_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// -------------------------------------------------------------------

// StepMonth

// int32 offset = 1;
inline void StepMonth::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0;
}
inline ::int32_t StepMonth::offset() const {
  // @@protoc_insertion_point(field_get:cmd.System.StepMonth.offset)
  return _internal_offset();
}
inline void StepMonth::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:cmd.System.StepMonth.offset)
}
inline ::int32_t StepMonth::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void StepMonth::_internal_set_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// -------------------------------------------------------------------

// StepDay

// int32 offset = 1;
inline void StepDay::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0;
}
inline ::int32_t StepDay::offset() const {
  // @@protoc_insertion_point(field_get:cmd.System.StepDay.offset)
  return _internal_offset();
}
inline void StepDay::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:cmd.System.StepDay.offset)
}
inline ::int32_t StepDay::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void StepDay::_internal_set_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// -------------------------------------------------------------------

// StepHour

// int32 offset = 1;
inline void StepHour::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0;
}
inline ::int32_t StepHour::offset() const {
  // @@protoc_insertion_point(field_get:cmd.System.StepHour.offset)
  return _internal_offset();
}
inline void StepHour::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:cmd.System.StepHour.offset)
}
inline ::int32_t StepHour::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void StepHour::_internal_set_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// -------------------------------------------------------------------

// StepMinute

// int32 offset = 1;
inline void StepMinute::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0;
}
inline ::int32_t StepMinute::offset() const {
  // @@protoc_insertion_point(field_get:cmd.System.StepMinute.offset)
  return _internal_offset();
}
inline void StepMinute::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:cmd.System.StepMinute.offset)
}
inline ::int32_t StepMinute::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void StepMinute::_internal_set_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// -------------------------------------------------------------------

// StepSecond

// int32 offset = 1;
inline void StepSecond::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0;
}
inline ::int32_t StepSecond::offset() const {
  // @@protoc_insertion_point(field_get:cmd.System.StepSecond.offset)
  return _internal_offset();
}
inline void StepSecond::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:cmd.System.StepSecond.offset)
}
inline ::int32_t StepSecond::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void StepSecond::_internal_set_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace System
}  // namespace cmd


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // jon_5fshared_5fcmd_5fsystem_2eproto_2epb_2eh
