// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: jon_shared_data_rotary.proto
// Protobuf C++ Version: 5.29.2

#ifndef jon_5fshared_5fdata_5frotary_2eproto_2epb_2eh
#define jon_5fshared_5fdata_5frotary_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "jon_shared_data_types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_jon_5fshared_5fdata_5frotary_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_jon_5fshared_5fdata_5frotary_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_jon_5fshared_5fdata_5frotary_2eproto;
namespace ser {
class JonGuiDataRotary;
struct JonGuiDataRotaryDefaultTypeInternal;
extern JonGuiDataRotaryDefaultTypeInternal _JonGuiDataRotary_default_instance_;
class ScanNode;
struct ScanNodeDefaultTypeInternal;
extern ScanNodeDefaultTypeInternal _ScanNode_default_instance_;
}  // namespace ser
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ser {

// ===================================================================


// -------------------------------------------------------------------

class ScanNode final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ser.ScanNode) */ {
 public:
  inline ScanNode() : ScanNode(nullptr) {}
  ~ScanNode() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScanNode* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScanNode));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScanNode(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScanNode(const ScanNode& from) : ScanNode(nullptr, from) {}
  inline ScanNode(ScanNode&& from) noexcept
      : ScanNode(nullptr, std::move(from)) {}
  inline ScanNode& operator=(const ScanNode& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanNode& operator=(ScanNode&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanNode& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanNode* internal_default_instance() {
    return reinterpret_cast<const ScanNode*>(
        &_ScanNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ScanNode& a, ScanNode& b) { a.Swap(&b); }
  inline void Swap(ScanNode* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanNode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanNode* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScanNode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScanNode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScanNode& from) { ScanNode::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScanNode* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ser.ScanNode"; }

 protected:
  explicit ScanNode(::google::protobuf::Arena* arena);
  ScanNode(::google::protobuf::Arena* arena, const ScanNode& from);
  ScanNode(::google::protobuf::Arena* arena, ScanNode&& from) noexcept
      : ScanNode(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIndexFieldNumber = 1,
    kDayZoomTableValueFieldNumber = 2,
    kAzimuthFieldNumber = 4,
    kElevationFieldNumber = 5,
    kLingerFieldNumber = 6,
    kSpeedFieldNumber = 7,
    kHeatZoomTableValueFieldNumber = 3,
  };
  // int32 index = 1;
  void clear_index() ;
  ::int32_t index() const;
  void set_index(::int32_t value);

  private:
  ::int32_t _internal_index() const;
  void _internal_set_index(::int32_t value);

  public:
  // int32 DayZoomTableValue = 2;
  void clear_dayzoomtablevalue() ;
  ::int32_t dayzoomtablevalue() const;
  void set_dayzoomtablevalue(::int32_t value);

  private:
  ::int32_t _internal_dayzoomtablevalue() const;
  void _internal_set_dayzoomtablevalue(::int32_t value);

  public:
  // double azimuth = 4;
  void clear_azimuth() ;
  double azimuth() const;
  void set_azimuth(double value);

  private:
  double _internal_azimuth() const;
  void _internal_set_azimuth(double value);

  public:
  // double elevation = 5;
  void clear_elevation() ;
  double elevation() const;
  void set_elevation(double value);

  private:
  double _internal_elevation() const;
  void _internal_set_elevation(double value);

  public:
  // double linger = 6;
  void clear_linger() ;
  double linger() const;
  void set_linger(double value);

  private:
  double _internal_linger() const;
  void _internal_set_linger(double value);

  public:
  // double speed = 7;
  void clear_speed() ;
  double speed() const;
  void set_speed(double value);

  private:
  double _internal_speed() const;
  void _internal_set_speed(double value);

  public:
  // int32 HeatZoomTableValue = 3;
  void clear_heatzoomtablevalue() ;
  ::int32_t heatzoomtablevalue() const;
  void set_heatzoomtablevalue(::int32_t value);

  private:
  ::int32_t _internal_heatzoomtablevalue() const;
  void _internal_set_heatzoomtablevalue(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ser.ScanNode)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScanNode& from_msg);
    ::int32_t index_;
    ::int32_t dayzoomtablevalue_;
    double azimuth_;
    double elevation_;
    double linger_;
    double speed_;
    ::int32_t heatzoomtablevalue_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fdata_5frotary_2eproto;
};
// -------------------------------------------------------------------

class JonGuiDataRotary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ser.JonGuiDataRotary) */ {
 public:
  inline JonGuiDataRotary() : JonGuiDataRotary(nullptr) {}
  ~JonGuiDataRotary() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JonGuiDataRotary* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JonGuiDataRotary));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JonGuiDataRotary(
      ::google::protobuf::internal::ConstantInitialized);

  inline JonGuiDataRotary(const JonGuiDataRotary& from) : JonGuiDataRotary(nullptr, from) {}
  inline JonGuiDataRotary(JonGuiDataRotary&& from) noexcept
      : JonGuiDataRotary(nullptr, std::move(from)) {}
  inline JonGuiDataRotary& operator=(const JonGuiDataRotary& from) {
    CopyFrom(from);
    return *this;
  }
  inline JonGuiDataRotary& operator=(JonGuiDataRotary&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JonGuiDataRotary& default_instance() {
    return *internal_default_instance();
  }
  static inline const JonGuiDataRotary* internal_default_instance() {
    return reinterpret_cast<const JonGuiDataRotary*>(
        &_JonGuiDataRotary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(JonGuiDataRotary& a, JonGuiDataRotary& b) { a.Swap(&b); }
  inline void Swap(JonGuiDataRotary* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JonGuiDataRotary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JonGuiDataRotary* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JonGuiDataRotary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JonGuiDataRotary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JonGuiDataRotary& from) { JonGuiDataRotary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JonGuiDataRotary* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ser.JonGuiDataRotary"; }

 protected:
  explicit JonGuiDataRotary(::google::protobuf::Arena* arena);
  JonGuiDataRotary(::google::protobuf::Arena* arena, const JonGuiDataRotary& from);
  JonGuiDataRotary(::google::protobuf::Arena* arena, JonGuiDataRotary&& from) noexcept
      : JonGuiDataRotary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrentScanNodeFieldNumber = 17,
    kAzimuthFieldNumber = 1,
    kAzimuthSpeedFieldNumber = 2,
    kElevationFieldNumber = 3,
    kElevationSpeedFieldNumber = 4,
    kPlatformAzimuthFieldNumber = 5,
    kPlatformElevationFieldNumber = 6,
    kPlatformBankFieldNumber = 7,
    kModeFieldNumber = 9,
    kIsMovingFieldNumber = 8,
    kIsScanningFieldNumber = 10,
    kIsScanningPausedFieldNumber = 11,
    kUseRotaryAsCompassFieldNumber = 12,
    kScanTargetFieldNumber = 13,
    kScanTargetMaxFieldNumber = 14,
    kSunAzimuthFieldNumber = 15,
    kSunElevationFieldNumber = 16,
  };
  // .ser.ScanNode current_scan_node = 17;
  bool has_current_scan_node() const;
  void clear_current_scan_node() ;
  const ::ser::ScanNode& current_scan_node() const;
  PROTOBUF_NODISCARD ::ser::ScanNode* release_current_scan_node();
  ::ser::ScanNode* mutable_current_scan_node();
  void set_allocated_current_scan_node(::ser::ScanNode* value);
  void unsafe_arena_set_allocated_current_scan_node(::ser::ScanNode* value);
  ::ser::ScanNode* unsafe_arena_release_current_scan_node();

  private:
  const ::ser::ScanNode& _internal_current_scan_node() const;
  ::ser::ScanNode* _internal_mutable_current_scan_node();

  public:
  // double azimuth = 1;
  void clear_azimuth() ;
  double azimuth() const;
  void set_azimuth(double value);

  private:
  double _internal_azimuth() const;
  void _internal_set_azimuth(double value);

  public:
  // double azimuth_speed = 2;
  void clear_azimuth_speed() ;
  double azimuth_speed() const;
  void set_azimuth_speed(double value);

  private:
  double _internal_azimuth_speed() const;
  void _internal_set_azimuth_speed(double value);

  public:
  // double elevation = 3;
  void clear_elevation() ;
  double elevation() const;
  void set_elevation(double value);

  private:
  double _internal_elevation() const;
  void _internal_set_elevation(double value);

  public:
  // double elevation_speed = 4;
  void clear_elevation_speed() ;
  double elevation_speed() const;
  void set_elevation_speed(double value);

  private:
  double _internal_elevation_speed() const;
  void _internal_set_elevation_speed(double value);

  public:
  // double platform_azimuth = 5;
  void clear_platform_azimuth() ;
  double platform_azimuth() const;
  void set_platform_azimuth(double value);

  private:
  double _internal_platform_azimuth() const;
  void _internal_set_platform_azimuth(double value);

  public:
  // double platform_elevation = 6;
  void clear_platform_elevation() ;
  double platform_elevation() const;
  void set_platform_elevation(double value);

  private:
  double _internal_platform_elevation() const;
  void _internal_set_platform_elevation(double value);

  public:
  // double platform_bank = 7;
  void clear_platform_bank() ;
  double platform_bank() const;
  void set_platform_bank(double value);

  private:
  double _internal_platform_bank() const;
  void _internal_set_platform_bank(double value);

  public:
  // .ser.JonGuiDataRotaryMode mode = 9;
  void clear_mode() ;
  ::ser::JonGuiDataRotaryMode mode() const;
  void set_mode(::ser::JonGuiDataRotaryMode value);

  private:
  ::ser::JonGuiDataRotaryMode _internal_mode() const;
  void _internal_set_mode(::ser::JonGuiDataRotaryMode value);

  public:
  // bool is_moving = 8;
  void clear_is_moving() ;
  bool is_moving() const;
  void set_is_moving(bool value);

  private:
  bool _internal_is_moving() const;
  void _internal_set_is_moving(bool value);

  public:
  // bool is_scanning = 10;
  void clear_is_scanning() ;
  bool is_scanning() const;
  void set_is_scanning(bool value);

  private:
  bool _internal_is_scanning() const;
  void _internal_set_is_scanning(bool value);

  public:
  // bool is_scanning_paused = 11;
  void clear_is_scanning_paused() ;
  bool is_scanning_paused() const;
  void set_is_scanning_paused(bool value);

  private:
  bool _internal_is_scanning_paused() const;
  void _internal_set_is_scanning_paused(bool value);

  public:
  // bool use_rotary_as_compass = 12;
  void clear_use_rotary_as_compass() ;
  bool use_rotary_as_compass() const;
  void set_use_rotary_as_compass(bool value);

  private:
  bool _internal_use_rotary_as_compass() const;
  void _internal_set_use_rotary_as_compass(bool value);

  public:
  // int32 scan_target = 13;
  void clear_scan_target() ;
  ::int32_t scan_target() const;
  void set_scan_target(::int32_t value);

  private:
  ::int32_t _internal_scan_target() const;
  void _internal_set_scan_target(::int32_t value);

  public:
  // int32 scan_target_max = 14;
  void clear_scan_target_max() ;
  ::int32_t scan_target_max() const;
  void set_scan_target_max(::int32_t value);

  private:
  ::int32_t _internal_scan_target_max() const;
  void _internal_set_scan_target_max(::int32_t value);

  public:
  // double sun_azimuth = 15;
  void clear_sun_azimuth() ;
  double sun_azimuth() const;
  void set_sun_azimuth(double value);

  private:
  double _internal_sun_azimuth() const;
  void _internal_set_sun_azimuth(double value);

  public:
  // double sun_elevation = 16;
  void clear_sun_elevation() ;
  double sun_elevation() const;
  void set_sun_elevation(double value);

  private:
  double _internal_sun_elevation() const;
  void _internal_set_sun_elevation(double value);

  public:
  // @@protoc_insertion_point(class_scope:ser.JonGuiDataRotary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 17, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JonGuiDataRotary& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::ser::ScanNode* current_scan_node_;
    double azimuth_;
    double azimuth_speed_;
    double elevation_;
    double elevation_speed_;
    double platform_azimuth_;
    double platform_elevation_;
    double platform_bank_;
    int mode_;
    bool is_moving_;
    bool is_scanning_;
    bool is_scanning_paused_;
    bool use_rotary_as_compass_;
    ::int32_t scan_target_;
    ::int32_t scan_target_max_;
    double sun_azimuth_;
    double sun_elevation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fdata_5frotary_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// JonGuiDataRotary

// double azimuth = 1;
inline void JonGuiDataRotary::clear_azimuth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.azimuth_ = 0;
}
inline double JonGuiDataRotary::azimuth() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.azimuth)
  return _internal_azimuth();
}
inline void JonGuiDataRotary::set_azimuth(double value) {
  _internal_set_azimuth(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.azimuth)
}
inline double JonGuiDataRotary::_internal_azimuth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.azimuth_;
}
inline void JonGuiDataRotary::_internal_set_azimuth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.azimuth_ = value;
}

// double azimuth_speed = 2;
inline void JonGuiDataRotary::clear_azimuth_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.azimuth_speed_ = 0;
}
inline double JonGuiDataRotary::azimuth_speed() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.azimuth_speed)
  return _internal_azimuth_speed();
}
inline void JonGuiDataRotary::set_azimuth_speed(double value) {
  _internal_set_azimuth_speed(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.azimuth_speed)
}
inline double JonGuiDataRotary::_internal_azimuth_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.azimuth_speed_;
}
inline void JonGuiDataRotary::_internal_set_azimuth_speed(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.azimuth_speed_ = value;
}

// double elevation = 3;
inline void JonGuiDataRotary::clear_elevation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elevation_ = 0;
}
inline double JonGuiDataRotary::elevation() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.elevation)
  return _internal_elevation();
}
inline void JonGuiDataRotary::set_elevation(double value) {
  _internal_set_elevation(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.elevation)
}
inline double JonGuiDataRotary::_internal_elevation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.elevation_;
}
inline void JonGuiDataRotary::_internal_set_elevation(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elevation_ = value;
}

// double elevation_speed = 4;
inline void JonGuiDataRotary::clear_elevation_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elevation_speed_ = 0;
}
inline double JonGuiDataRotary::elevation_speed() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.elevation_speed)
  return _internal_elevation_speed();
}
inline void JonGuiDataRotary::set_elevation_speed(double value) {
  _internal_set_elevation_speed(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.elevation_speed)
}
inline double JonGuiDataRotary::_internal_elevation_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.elevation_speed_;
}
inline void JonGuiDataRotary::_internal_set_elevation_speed(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elevation_speed_ = value;
}

// double platform_azimuth = 5;
inline void JonGuiDataRotary::clear_platform_azimuth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_azimuth_ = 0;
}
inline double JonGuiDataRotary::platform_azimuth() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.platform_azimuth)
  return _internal_platform_azimuth();
}
inline void JonGuiDataRotary::set_platform_azimuth(double value) {
  _internal_set_platform_azimuth(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.platform_azimuth)
}
inline double JonGuiDataRotary::_internal_platform_azimuth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.platform_azimuth_;
}
inline void JonGuiDataRotary::_internal_set_platform_azimuth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_azimuth_ = value;
}

// double platform_elevation = 6;
inline void JonGuiDataRotary::clear_platform_elevation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_elevation_ = 0;
}
inline double JonGuiDataRotary::platform_elevation() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.platform_elevation)
  return _internal_platform_elevation();
}
inline void JonGuiDataRotary::set_platform_elevation(double value) {
  _internal_set_platform_elevation(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.platform_elevation)
}
inline double JonGuiDataRotary::_internal_platform_elevation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.platform_elevation_;
}
inline void JonGuiDataRotary::_internal_set_platform_elevation(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_elevation_ = value;
}

// double platform_bank = 7;
inline void JonGuiDataRotary::clear_platform_bank() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_bank_ = 0;
}
inline double JonGuiDataRotary::platform_bank() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.platform_bank)
  return _internal_platform_bank();
}
inline void JonGuiDataRotary::set_platform_bank(double value) {
  _internal_set_platform_bank(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.platform_bank)
}
inline double JonGuiDataRotary::_internal_platform_bank() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.platform_bank_;
}
inline void JonGuiDataRotary::_internal_set_platform_bank(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.platform_bank_ = value;
}

// bool is_moving = 8;
inline void JonGuiDataRotary::clear_is_moving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_moving_ = false;
}
inline bool JonGuiDataRotary::is_moving() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.is_moving)
  return _internal_is_moving();
}
inline void JonGuiDataRotary::set_is_moving(bool value) {
  _internal_set_is_moving(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.is_moving)
}
inline bool JonGuiDataRotary::_internal_is_moving() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_moving_;
}
inline void JonGuiDataRotary::_internal_set_is_moving(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_moving_ = value;
}

// .ser.JonGuiDataRotaryMode mode = 9;
inline void JonGuiDataRotary::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
}
inline ::ser::JonGuiDataRotaryMode JonGuiDataRotary::mode() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.mode)
  return _internal_mode();
}
inline void JonGuiDataRotary::set_mode(::ser::JonGuiDataRotaryMode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.mode)
}
inline ::ser::JonGuiDataRotaryMode JonGuiDataRotary::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataRotaryMode>(_impl_.mode_);
}
inline void JonGuiDataRotary::_internal_set_mode(::ser::JonGuiDataRotaryMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// bool is_scanning = 10;
inline void JonGuiDataRotary::clear_is_scanning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_scanning_ = false;
}
inline bool JonGuiDataRotary::is_scanning() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.is_scanning)
  return _internal_is_scanning();
}
inline void JonGuiDataRotary::set_is_scanning(bool value) {
  _internal_set_is_scanning(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.is_scanning)
}
inline bool JonGuiDataRotary::_internal_is_scanning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_scanning_;
}
inline void JonGuiDataRotary::_internal_set_is_scanning(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_scanning_ = value;
}

// bool is_scanning_paused = 11;
inline void JonGuiDataRotary::clear_is_scanning_paused() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_scanning_paused_ = false;
}
inline bool JonGuiDataRotary::is_scanning_paused() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.is_scanning_paused)
  return _internal_is_scanning_paused();
}
inline void JonGuiDataRotary::set_is_scanning_paused(bool value) {
  _internal_set_is_scanning_paused(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.is_scanning_paused)
}
inline bool JonGuiDataRotary::_internal_is_scanning_paused() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_scanning_paused_;
}
inline void JonGuiDataRotary::_internal_set_is_scanning_paused(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_scanning_paused_ = value;
}

// bool use_rotary_as_compass = 12;
inline void JonGuiDataRotary::clear_use_rotary_as_compass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_rotary_as_compass_ = false;
}
inline bool JonGuiDataRotary::use_rotary_as_compass() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.use_rotary_as_compass)
  return _internal_use_rotary_as_compass();
}
inline void JonGuiDataRotary::set_use_rotary_as_compass(bool value) {
  _internal_set_use_rotary_as_compass(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.use_rotary_as_compass)
}
inline bool JonGuiDataRotary::_internal_use_rotary_as_compass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_rotary_as_compass_;
}
inline void JonGuiDataRotary::_internal_set_use_rotary_as_compass(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_rotary_as_compass_ = value;
}

// int32 scan_target = 13;
inline void JonGuiDataRotary::clear_scan_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scan_target_ = 0;
}
inline ::int32_t JonGuiDataRotary::scan_target() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.scan_target)
  return _internal_scan_target();
}
inline void JonGuiDataRotary::set_scan_target(::int32_t value) {
  _internal_set_scan_target(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.scan_target)
}
inline ::int32_t JonGuiDataRotary::_internal_scan_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scan_target_;
}
inline void JonGuiDataRotary::_internal_set_scan_target(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scan_target_ = value;
}

// int32 scan_target_max = 14;
inline void JonGuiDataRotary::clear_scan_target_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scan_target_max_ = 0;
}
inline ::int32_t JonGuiDataRotary::scan_target_max() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.scan_target_max)
  return _internal_scan_target_max();
}
inline void JonGuiDataRotary::set_scan_target_max(::int32_t value) {
  _internal_set_scan_target_max(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.scan_target_max)
}
inline ::int32_t JonGuiDataRotary::_internal_scan_target_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scan_target_max_;
}
inline void JonGuiDataRotary::_internal_set_scan_target_max(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scan_target_max_ = value;
}

// double sun_azimuth = 15;
inline void JonGuiDataRotary::clear_sun_azimuth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sun_azimuth_ = 0;
}
inline double JonGuiDataRotary::sun_azimuth() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.sun_azimuth)
  return _internal_sun_azimuth();
}
inline void JonGuiDataRotary::set_sun_azimuth(double value) {
  _internal_set_sun_azimuth(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.sun_azimuth)
}
inline double JonGuiDataRotary::_internal_sun_azimuth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sun_azimuth_;
}
inline void JonGuiDataRotary::_internal_set_sun_azimuth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sun_azimuth_ = value;
}

// double sun_elevation = 16;
inline void JonGuiDataRotary::clear_sun_elevation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sun_elevation_ = 0;
}
inline double JonGuiDataRotary::sun_elevation() const {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.sun_elevation)
  return _internal_sun_elevation();
}
inline void JonGuiDataRotary::set_sun_elevation(double value) {
  _internal_set_sun_elevation(value);
  // @@protoc_insertion_point(field_set:ser.JonGuiDataRotary.sun_elevation)
}
inline double JonGuiDataRotary::_internal_sun_elevation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sun_elevation_;
}
inline void JonGuiDataRotary::_internal_set_sun_elevation(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sun_elevation_ = value;
}

// .ser.ScanNode current_scan_node = 17;
inline bool JonGuiDataRotary::has_current_scan_node() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.current_scan_node_ != nullptr);
  return value;
}
inline void JonGuiDataRotary::clear_current_scan_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_scan_node_ != nullptr) _impl_.current_scan_node_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ser::ScanNode& JonGuiDataRotary::_internal_current_scan_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::ScanNode* p = _impl_.current_scan_node_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::ScanNode&>(::ser::_ScanNode_default_instance_);
}
inline const ::ser::ScanNode& JonGuiDataRotary::current_scan_node() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGuiDataRotary.current_scan_node)
  return _internal_current_scan_node();
}
inline void JonGuiDataRotary::unsafe_arena_set_allocated_current_scan_node(::ser::ScanNode* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.current_scan_node_);
  }
  _impl_.current_scan_node_ = reinterpret_cast<::ser::ScanNode*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGuiDataRotary.current_scan_node)
}
inline ::ser::ScanNode* JonGuiDataRotary::release_current_scan_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ser::ScanNode* released = _impl_.current_scan_node_;
  _impl_.current_scan_node_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::ScanNode* JonGuiDataRotary::unsafe_arena_release_current_scan_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGuiDataRotary.current_scan_node)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ser::ScanNode* temp = _impl_.current_scan_node_;
  _impl_.current_scan_node_ = nullptr;
  return temp;
}
inline ::ser::ScanNode* JonGuiDataRotary::_internal_mutable_current_scan_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_scan_node_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::ScanNode>(GetArena());
    _impl_.current_scan_node_ = reinterpret_cast<::ser::ScanNode*>(p);
  }
  return _impl_.current_scan_node_;
}
inline ::ser::ScanNode* JonGuiDataRotary::mutable_current_scan_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ser::ScanNode* _msg = _internal_mutable_current_scan_node();
  // @@protoc_insertion_point(field_mutable:ser.JonGuiDataRotary.current_scan_node)
  return _msg;
}
inline void JonGuiDataRotary::set_allocated_current_scan_node(::ser::ScanNode* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.current_scan_node_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.current_scan_node_ = reinterpret_cast<::ser::ScanNode*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGuiDataRotary.current_scan_node)
}

// -------------------------------------------------------------------

// ScanNode

// int32 index = 1;
inline void ScanNode::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0;
}
inline ::int32_t ScanNode::index() const {
  // @@protoc_insertion_point(field_get:ser.ScanNode.index)
  return _internal_index();
}
inline void ScanNode::set_index(::int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:ser.ScanNode.index)
}
inline ::int32_t ScanNode::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void ScanNode::_internal_set_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// int32 DayZoomTableValue = 2;
inline void ScanNode::clear_dayzoomtablevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dayzoomtablevalue_ = 0;
}
inline ::int32_t ScanNode::dayzoomtablevalue() const {
  // @@protoc_insertion_point(field_get:ser.ScanNode.DayZoomTableValue)
  return _internal_dayzoomtablevalue();
}
inline void ScanNode::set_dayzoomtablevalue(::int32_t value) {
  _internal_set_dayzoomtablevalue(value);
  // @@protoc_insertion_point(field_set:ser.ScanNode.DayZoomTableValue)
}
inline ::int32_t ScanNode::_internal_dayzoomtablevalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dayzoomtablevalue_;
}
inline void ScanNode::_internal_set_dayzoomtablevalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dayzoomtablevalue_ = value;
}

// int32 HeatZoomTableValue = 3;
inline void ScanNode::clear_heatzoomtablevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heatzoomtablevalue_ = 0;
}
inline ::int32_t ScanNode::heatzoomtablevalue() const {
  // @@protoc_insertion_point(field_get:ser.ScanNode.HeatZoomTableValue)
  return _internal_heatzoomtablevalue();
}
inline void ScanNode::set_heatzoomtablevalue(::int32_t value) {
  _internal_set_heatzoomtablevalue(value);
  // @@protoc_insertion_point(field_set:ser.ScanNode.HeatZoomTableValue)
}
inline ::int32_t ScanNode::_internal_heatzoomtablevalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heatzoomtablevalue_;
}
inline void ScanNode::_internal_set_heatzoomtablevalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heatzoomtablevalue_ = value;
}

// double azimuth = 4;
inline void ScanNode::clear_azimuth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.azimuth_ = 0;
}
inline double ScanNode::azimuth() const {
  // @@protoc_insertion_point(field_get:ser.ScanNode.azimuth)
  return _internal_azimuth();
}
inline void ScanNode::set_azimuth(double value) {
  _internal_set_azimuth(value);
  // @@protoc_insertion_point(field_set:ser.ScanNode.azimuth)
}
inline double ScanNode::_internal_azimuth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.azimuth_;
}
inline void ScanNode::_internal_set_azimuth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.azimuth_ = value;
}

// double elevation = 5;
inline void ScanNode::clear_elevation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elevation_ = 0;
}
inline double ScanNode::elevation() const {
  // @@protoc_insertion_point(field_get:ser.ScanNode.elevation)
  return _internal_elevation();
}
inline void ScanNode::set_elevation(double value) {
  _internal_set_elevation(value);
  // @@protoc_insertion_point(field_set:ser.ScanNode.elevation)
}
inline double ScanNode::_internal_elevation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.elevation_;
}
inline void ScanNode::_internal_set_elevation(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elevation_ = value;
}

// double linger = 6;
inline void ScanNode::clear_linger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linger_ = 0;
}
inline double ScanNode::linger() const {
  // @@protoc_insertion_point(field_get:ser.ScanNode.linger)
  return _internal_linger();
}
inline void ScanNode::set_linger(double value) {
  _internal_set_linger(value);
  // @@protoc_insertion_point(field_set:ser.ScanNode.linger)
}
inline double ScanNode::_internal_linger() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.linger_;
}
inline void ScanNode::_internal_set_linger(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linger_ = value;
}

// double speed = 7;
inline void ScanNode::clear_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = 0;
}
inline double ScanNode::speed() const {
  // @@protoc_insertion_point(field_get:ser.ScanNode.speed)
  return _internal_speed();
}
inline void ScanNode::set_speed(double value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:ser.ScanNode.speed)
}
inline double ScanNode::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_;
}
inline void ScanNode::_internal_set_speed(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace ser


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // jon_5fshared_5fdata_5frotary_2eproto_2epb_2eh
