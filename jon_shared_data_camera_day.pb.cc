// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: jon_shared_data_camera_day.proto
// Protobuf C++ Version: 5.29.2

#include "jon_shared_data_camera_day.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ser {

inline constexpr JonGuiDataCameraDay::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : focus_pos_{0},
        zoom_pos_{0},
        iris_pos_{0},
        zoom_table_pos_{0},
        zoom_table_pos_max_{0},
        fx_mode_{static_cast< ::ser::JonGuiDataFxModeDay >(0)},
        infrared_filter_{false},
        auto_focus_{false},
        auto_iris_{false},
        digital_zoom_level_{0},
        clahe_level_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JonGuiDataCameraDay::JonGuiDataCameraDay(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JonGuiDataCameraDayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JonGuiDataCameraDayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JonGuiDataCameraDayDefaultTypeInternal() {}
  union {
    JonGuiDataCameraDay _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JonGuiDataCameraDayDefaultTypeInternal _JonGuiDataCameraDay_default_instance_;
}  // namespace ser
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_jon_5fshared_5fdata_5fcamera_5fday_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_jon_5fshared_5fdata_5fcamera_5fday_2eproto = nullptr;
const ::uint32_t
    TableStruct_jon_5fshared_5fdata_5fcamera_5fday_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataCameraDay, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataCameraDay, _impl_.focus_pos_),
        PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataCameraDay, _impl_.zoom_pos_),
        PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataCameraDay, _impl_.iris_pos_),
        PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataCameraDay, _impl_.infrared_filter_),
        PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataCameraDay, _impl_.zoom_table_pos_),
        PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataCameraDay, _impl_.zoom_table_pos_max_),
        PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataCameraDay, _impl_.fx_mode_),
        PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataCameraDay, _impl_.auto_focus_),
        PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataCameraDay, _impl_.auto_iris_),
        PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataCameraDay, _impl_.digital_zoom_level_),
        PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataCameraDay, _impl_.clahe_level_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ser::JonGuiDataCameraDay)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ser::_JonGuiDataCameraDay_default_instance_._instance,
};
const char descriptor_table_protodef_jon_5fshared_5fdata_5fcamera_5fday_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n jon_shared_data_camera_day.proto\022\003ser\032"
    "\033jon_shared_data_types.proto\"\234\002\n\023JonGuiD"
    "ataCameraDay\022\021\n\tfocus_pos\030\001 \001(\001\022\020\n\010zoom_"
    "pos\030\002 \001(\001\022\020\n\010iris_pos\030\003 \001(\001\022\027\n\017infrared_"
    "filter\030\004 \001(\010\022\026\n\016zoom_table_pos\030\005 \001(\005\022\032\n\022"
    "zoom_table_pos_max\030\006 \001(\005\022)\n\007fx_mode\030\007 \001("
    "\0162\030.ser.JonGuiDataFxModeDay\022\022\n\nauto_focu"
    "s\030\010 \001(\010\022\021\n\tauto_iris\030\t \001(\010\022\032\n\022digital_zo"
    "om_level\030\n \001(\001\022\023\n\013clahe_level\030\013 \001(\001BRZPg"
    "it-codecommit.eu-central-1.amazonaws.com"
    "/v1/repos/jettison/jonp/data/camera_dayb"
    "\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_jon_5fshared_5fdata_5fcamera_5fday_2eproto_deps[1] =
    {
        &::descriptor_table_jon_5fshared_5fdata_5ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_jon_5fshared_5fdata_5fcamera_5fday_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_jon_5fshared_5fdata_5fcamera_5fday_2eproto = {
    false,
    false,
    447,
    descriptor_table_protodef_jon_5fshared_5fdata_5fcamera_5fday_2eproto,
    "jon_shared_data_camera_day.proto",
    &descriptor_table_jon_5fshared_5fdata_5fcamera_5fday_2eproto_once,
    descriptor_table_jon_5fshared_5fdata_5fcamera_5fday_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_jon_5fshared_5fdata_5fcamera_5fday_2eproto::offsets,
    file_level_enum_descriptors_jon_5fshared_5fdata_5fcamera_5fday_2eproto,
    file_level_service_descriptors_jon_5fshared_5fdata_5fcamera_5fday_2eproto,
};
namespace ser {
// ===================================================================

class JonGuiDataCameraDay::_Internal {
 public:
};

JonGuiDataCameraDay::JonGuiDataCameraDay(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ser.JonGuiDataCameraDay)
}
JonGuiDataCameraDay::JonGuiDataCameraDay(
    ::google::protobuf::Arena* arena, const JonGuiDataCameraDay& from)
    : JonGuiDataCameraDay(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE JonGuiDataCameraDay::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void JonGuiDataCameraDay::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, focus_pos_),
           0,
           offsetof(Impl_, clahe_level_) -
               offsetof(Impl_, focus_pos_) +
               sizeof(Impl_::clahe_level_));
}
JonGuiDataCameraDay::~JonGuiDataCameraDay() {
  // @@protoc_insertion_point(destructor:ser.JonGuiDataCameraDay)
  SharedDtor(*this);
}
inline void JonGuiDataCameraDay::SharedDtor(MessageLite& self) {
  JonGuiDataCameraDay& this_ = static_cast<JonGuiDataCameraDay&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* JonGuiDataCameraDay::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) JonGuiDataCameraDay(arena);
}
constexpr auto JonGuiDataCameraDay::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(JonGuiDataCameraDay),
                                            alignof(JonGuiDataCameraDay));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull JonGuiDataCameraDay::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_JonGuiDataCameraDay_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &JonGuiDataCameraDay::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<JonGuiDataCameraDay>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &JonGuiDataCameraDay::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<JonGuiDataCameraDay>(), &JonGuiDataCameraDay::ByteSizeLong,
            &JonGuiDataCameraDay::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_._cached_size_),
        false,
    },
    &JonGuiDataCameraDay::kDescriptorMethods,
    &descriptor_table_jon_5fshared_5fdata_5fcamera_5fday_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* JonGuiDataCameraDay::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 0, 2> JonGuiDataCameraDay::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ser::JonGuiDataCameraDay>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double focus_pos = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.focus_pos_)}},
    // double zoom_pos = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.zoom_pos_)}},
    // double iris_pos = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.iris_pos_)}},
    // bool infrared_filter = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JonGuiDataCameraDay, _impl_.infrared_filter_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.infrared_filter_)}},
    // int32 zoom_table_pos = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JonGuiDataCameraDay, _impl_.zoom_table_pos_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.zoom_table_pos_)}},
    // int32 zoom_table_pos_max = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JonGuiDataCameraDay, _impl_.zoom_table_pos_max_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.zoom_table_pos_max_)}},
    // .ser.JonGuiDataFxModeDay fx_mode = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JonGuiDataCameraDay, _impl_.fx_mode_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.fx_mode_)}},
    // bool auto_focus = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JonGuiDataCameraDay, _impl_.auto_focus_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.auto_focus_)}},
    // bool auto_iris = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JonGuiDataCameraDay, _impl_.auto_iris_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.auto_iris_)}},
    // double digital_zoom_level = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.digital_zoom_level_)}},
    // double clahe_level = 11;
    {::_pbi::TcParser::FastF64S1,
     {89, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.clahe_level_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double focus_pos = 1;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.focus_pos_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double zoom_pos = 2;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.zoom_pos_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double iris_pos = 3;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.iris_pos_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // bool infrared_filter = 4;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.infrared_filter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 zoom_table_pos = 5;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.zoom_table_pos_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 zoom_table_pos_max = 6;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.zoom_table_pos_max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .ser.JonGuiDataFxModeDay fx_mode = 7;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.fx_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool auto_focus = 8;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.auto_focus_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool auto_iris = 9;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.auto_iris_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // double digital_zoom_level = 10;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.digital_zoom_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double clahe_level = 11;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.clahe_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void JonGuiDataCameraDay::Clear() {
// @@protoc_insertion_point(message_clear_start:ser.JonGuiDataCameraDay)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.focus_pos_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.clahe_level_) -
      reinterpret_cast<char*>(&_impl_.focus_pos_)) + sizeof(_impl_.clahe_level_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* JonGuiDataCameraDay::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const JonGuiDataCameraDay& this_ = static_cast<const JonGuiDataCameraDay&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* JonGuiDataCameraDay::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const JonGuiDataCameraDay& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ser.JonGuiDataCameraDay)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double focus_pos = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_focus_pos()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_focus_pos(), target);
          }

          // double zoom_pos = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_zoom_pos()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_zoom_pos(), target);
          }

          // double iris_pos = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_iris_pos()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_iris_pos(), target);
          }

          // bool infrared_filter = 4;
          if (this_._internal_infrared_filter() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_infrared_filter(), target);
          }

          // int32 zoom_table_pos = 5;
          if (this_._internal_zoom_table_pos() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_zoom_table_pos(), target);
          }

          // int32 zoom_table_pos_max = 6;
          if (this_._internal_zoom_table_pos_max() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_zoom_table_pos_max(), target);
          }

          // .ser.JonGuiDataFxModeDay fx_mode = 7;
          if (this_._internal_fx_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                7, this_._internal_fx_mode(), target);
          }

          // bool auto_focus = 8;
          if (this_._internal_auto_focus() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_auto_focus(), target);
          }

          // bool auto_iris = 9;
          if (this_._internal_auto_iris() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_auto_iris(), target);
          }

          // double digital_zoom_level = 10;
          if (::absl::bit_cast<::uint64_t>(this_._internal_digital_zoom_level()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                10, this_._internal_digital_zoom_level(), target);
          }

          // double clahe_level = 11;
          if (::absl::bit_cast<::uint64_t>(this_._internal_clahe_level()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                11, this_._internal_clahe_level(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ser.JonGuiDataCameraDay)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t JonGuiDataCameraDay::ByteSizeLong(const MessageLite& base) {
          const JonGuiDataCameraDay& this_ = static_cast<const JonGuiDataCameraDay&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t JonGuiDataCameraDay::ByteSizeLong() const {
          const JonGuiDataCameraDay& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ser.JonGuiDataCameraDay)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double focus_pos = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_focus_pos()) != 0) {
              total_size += 9;
            }
            // double zoom_pos = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_zoom_pos()) != 0) {
              total_size += 9;
            }
            // double iris_pos = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_iris_pos()) != 0) {
              total_size += 9;
            }
            // int32 zoom_table_pos = 5;
            if (this_._internal_zoom_table_pos() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_zoom_table_pos());
            }
            // int32 zoom_table_pos_max = 6;
            if (this_._internal_zoom_table_pos_max() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_zoom_table_pos_max());
            }
            // .ser.JonGuiDataFxModeDay fx_mode = 7;
            if (this_._internal_fx_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_fx_mode());
            }
            // bool infrared_filter = 4;
            if (this_._internal_infrared_filter() != 0) {
              total_size += 2;
            }
            // bool auto_focus = 8;
            if (this_._internal_auto_focus() != 0) {
              total_size += 2;
            }
            // bool auto_iris = 9;
            if (this_._internal_auto_iris() != 0) {
              total_size += 2;
            }
            // double digital_zoom_level = 10;
            if (::absl::bit_cast<::uint64_t>(this_._internal_digital_zoom_level()) != 0) {
              total_size += 9;
            }
            // double clahe_level = 11;
            if (::absl::bit_cast<::uint64_t>(this_._internal_clahe_level()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void JonGuiDataCameraDay::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JonGuiDataCameraDay*>(&to_msg);
  auto& from = static_cast<const JonGuiDataCameraDay&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ser.JonGuiDataCameraDay)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_focus_pos()) != 0) {
    _this->_impl_.focus_pos_ = from._impl_.focus_pos_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_zoom_pos()) != 0) {
    _this->_impl_.zoom_pos_ = from._impl_.zoom_pos_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_iris_pos()) != 0) {
    _this->_impl_.iris_pos_ = from._impl_.iris_pos_;
  }
  if (from._internal_zoom_table_pos() != 0) {
    _this->_impl_.zoom_table_pos_ = from._impl_.zoom_table_pos_;
  }
  if (from._internal_zoom_table_pos_max() != 0) {
    _this->_impl_.zoom_table_pos_max_ = from._impl_.zoom_table_pos_max_;
  }
  if (from._internal_fx_mode() != 0) {
    _this->_impl_.fx_mode_ = from._impl_.fx_mode_;
  }
  if (from._internal_infrared_filter() != 0) {
    _this->_impl_.infrared_filter_ = from._impl_.infrared_filter_;
  }
  if (from._internal_auto_focus() != 0) {
    _this->_impl_.auto_focus_ = from._impl_.auto_focus_;
  }
  if (from._internal_auto_iris() != 0) {
    _this->_impl_.auto_iris_ = from._impl_.auto_iris_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_digital_zoom_level()) != 0) {
    _this->_impl_.digital_zoom_level_ = from._impl_.digital_zoom_level_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_clahe_level()) != 0) {
    _this->_impl_.clahe_level_ = from._impl_.clahe_level_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JonGuiDataCameraDay::CopyFrom(const JonGuiDataCameraDay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ser.JonGuiDataCameraDay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JonGuiDataCameraDay::InternalSwap(JonGuiDataCameraDay* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.clahe_level_)
      + sizeof(JonGuiDataCameraDay::_impl_.clahe_level_)
      - PROTOBUF_FIELD_OFFSET(JonGuiDataCameraDay, _impl_.focus_pos_)>(
          reinterpret_cast<char*>(&_impl_.focus_pos_),
          reinterpret_cast<char*>(&other->_impl_.focus_pos_));
}

::google::protobuf::Metadata JonGuiDataCameraDay::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ser
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_jon_5fshared_5fdata_5fcamera_5fday_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
